// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TelebuHubChat.DbContexts;

namespace TelebuHubChat.Migrations
{
    [DbContext(typeof(TelebuHubChatContext))]
    partial class TelebuHubChatContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TelebuHubChat.Models.ChatStatuses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("ChatStatuses");
                });

            modelBuilder.Entity("TelebuHubChat.Models.ConversationHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("ConversationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTimeUTC")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FromStatus")
                        .HasColumnType("int");

                    b.Property<int>("ToStatus")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("WidgetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConversationId");

                    b.HasIndex("WidgetId");

                    b.ToTable("ConversationHistory");
                });

            modelBuilder.Entity("TelebuHubChat.Models.ConversationInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ConversationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTimeUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("IsBotEnd")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("Id");

                    b.ToTable("ConversationInfo");
                });

            modelBuilder.Entity("TelebuHubChat.Models.ConversationMessageTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("MessageType")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("ConversationMessageTypes");
                });

            modelBuilder.Entity("TelebuHubChat.Models.ConversationMessages", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int?>("AgentId")
                        .HasColumnType("int");

                    b.Property<string>("AttachmentId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("AttachmentUrl")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("ConversationId")
                        .HasColumnType("int");

                    b.Property<int>("ConversationTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTimeUTC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("IsDelivered")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Message")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("MessageTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConversationId");

                    b.HasIndex("MessageTypeId");

                    b.ToTable("ConversationMessages");
                });

            modelBuilder.Entity("TelebuHubChat.Models.ConversationStatuses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("ConversationStatuses");
                });

            modelBuilder.Entity("TelebuHubChat.Models.Conversations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("AgentAcceptedTimeUTC")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("AgentAllocatedTimeUTC")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("AgentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AgentRequestedTimeUTC")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AssignedAgentName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("BotFlowCompleted")
                        .HasColumnType("int");

                    b.Property<string>("BrowserUserAgent")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool?>("ClosedByCustomer")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("ClosingTimeUTC")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ConversationTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTimeUTC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CustomerIPAddress")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("FirstAgentMessageTimeUTC")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("IsClosed")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Mobile")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("WidgetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.HasIndex("WidgetId");

                    b.ToTable("Conversations");
                });

            modelBuilder.Entity("TelebuHubChat.Models.CustomerIpInformation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("ClientIp")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedTimeUTC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("HttpReferrer")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("HttpURL")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("CustomerIpInformation");
                });

            modelBuilder.Entity("TelebuHubChat.Models.MasterCustomers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccountCustomerId")
                        .HasColumnType("int");

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Mobile")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("MasterCustomers");
                });

            modelBuilder.Entity("TelebuHubChat.Models.NavigationHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ConversationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Ip")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("LeavingTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Referrer")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Url")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("ConversationId");

                    b.ToTable("NavigationHistory");
                });

            modelBuilder.Entity("TelebuHubChat.Models.WidgetAuthkeys", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AuthKey")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("AuthToken")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("IsActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("WidgetChannelId")
                        .HasColumnType("int");

                    b.Property<int>("WidgetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WidgetAuthkeys");
                });

            modelBuilder.Entity("TelebuHubChat.Models.WidgetChannels", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ChanneUUID")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("ConversationTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("IsActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("RasaBotUrl")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("WidgetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WidgetChannels");
                });

            modelBuilder.Entity("TelebuHubChat.Models.WidgetConversationTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("WidgetConversationTypes");
                });

            modelBuilder.Entity("TelebuHubChat.Models.WidgetThemes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("WidgetThemes");
                });

            modelBuilder.Entity("TelebuHubChat.Models.Widgets", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("AgentAndCustomerWaitTimeRestrictionInSec")
                        .HasColumnType("int");

                    b.Property<string>("AgentChatClosure")
                        .HasColumnType("varchar(1500) CHARACTER SET utf8mb4")
                        .HasMaxLength(1500);

                    b.Property<int>("AutoCloseTimeForChatInMin")
                        .HasColumnType("int");

                    b.Property<string>("BotChatClosure")
                        .HasColumnType("varchar(1500) CHARACTER SET utf8mb4")
                        .HasMaxLength(1500);

                    b.Property<DateTime>("CreatedTimeUTC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CustomMessageForChatIcon")
                        .HasColumnType("varchar(1500) CHARACTER SET utf8mb4")
                        .HasMaxLength(1500);

                    b.Property<string>("CustomMetaData")
                        .HasColumnType("varchar(1500) CHARACTER SET utf8mb4")
                        .HasMaxLength(1500);

                    b.Property<string>("CustomerWaitTimeForAgentConnect")
                        .HasColumnType("varchar(1500) CHARACTER SET utf8mb4")
                        .HasMaxLength(1500);

                    b.Property<string>("DomainToLoadIn")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("ExpiryDateUTC")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("MetaData")
                        .HasColumnType("varchar(1500) CHARACTER SET utf8mb4")
                        .HasMaxLength(1500);

                    b.Property<string>("MinimizeStateText")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("NonBusinessConnect")
                        .HasColumnType("varchar(1500) CHARACTER SET utf8mb4")
                        .HasMaxLength(1500);

                    b.Property<sbyte>("PopInAfterSeconds")
                        .HasColumnType("tinyint");

                    b.Property<string>("Purpose")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("RasaBotUrl")
                        .HasColumnType("varchar(1500) CHARACTER SET utf8mb4")
                        .HasMaxLength(1500);

                    b.Property<int>("ThemeId")
                        .HasColumnType("int");

                    b.Property<int>("TimeSlotId")
                        .HasColumnType("int");

                    b.Property<string>("TimeToDisplayWelcomeFormToCustomer")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("UUID")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("UpdatedTimeUTC")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("WhileConnectingToAnAgent")
                        .HasColumnType("varchar(1500) CHARACTER SET utf8mb4")
                        .HasMaxLength(1500);

                    b.Property<string>("WidgetName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("WorkFlowId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ThemeId");

                    b.HasIndex("WorkFlowId");

                    b.ToTable("Widgets");
                });

            modelBuilder.Entity("TelebuHubChat.Models.WorkFlows", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("WorkFlow")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("WorkFlows");
                });

            modelBuilder.Entity("TelebuHubChat.Models.ConversationHistory", b =>
                {
                    b.HasOne("TelebuHubChat.Models.Conversations", "Conversations")
                        .WithMany("conversationHistories")
                        .HasForeignKey("ConversationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TelebuHubChat.Models.Widgets", "Widgets")
                        .WithMany()
                        .HasForeignKey("WidgetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TelebuHubChat.Models.ConversationMessages", b =>
                {
                    b.HasOne("TelebuHubChat.Models.Conversations", "Conversations")
                        .WithMany("conversationMessages")
                        .HasForeignKey("ConversationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TelebuHubChat.Models.ConversationMessageTypes", "ConversationMessageTypes")
                        .WithMany("conversationMessages")
                        .HasForeignKey("MessageTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TelebuHubChat.Models.Conversations", b =>
                {
                    b.HasOne("TelebuHubChat.Models.ConversationStatuses", "ConversationStatuses")
                        .WithMany("conversations")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TelebuHubChat.Models.Widgets", "Widgets")
                        .WithMany("conversations")
                        .HasForeignKey("WidgetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TelebuHubChat.Models.NavigationHistory", b =>
                {
                    b.HasOne("TelebuHubChat.Models.Conversations", "Conversations")
                        .WithMany("navigationHistories")
                        .HasForeignKey("ConversationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TelebuHubChat.Models.Widgets", b =>
                {
                    b.HasOne("TelebuHubChat.Models.WidgetThemes", "WidgetThemes")
                        .WithMany("widgets")
                        .HasForeignKey("ThemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TelebuHubChat.Models.WorkFlows", "WorkFlows")
                        .WithMany("widgets")
                        .HasForeignKey("WorkFlowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
