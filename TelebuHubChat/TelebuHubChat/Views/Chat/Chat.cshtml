@using TelebuHubChat.Models
@using  System.Web;
@using Microsoft.AspNetCore.Session
@using Microsoft.AspNetCore.Http;
@{
    var data = ViewBag.Message;

    var x = Context.Session.GetInt32("AccountId");
    var path = "~/StaticFiles/images/Chat_bg.png";

}
@{
    ViewData["Title"] = "chat";
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Index</title>
    <link href="~/StaticFiles/bootstrap.min.css" rel="stylesheet" />
    @* <link href="~/StaticFiles/components.css" rel="stylesheet" />*@
    <link href="~/StaticFiles/plugins.css" rel="stylesheet" />
    <link href="~/StaticFiles/animate.min.css" rel="stylesheet" />
    <link href="~/StaticFiles/Custom.css" rel="stylesheet" />
    <link href="~/StaticFiles/FrameStyles.css" rel="stylesheet" />
    <link href="~/StaticFiles/css/fontawesome-free-5.12.1-web/css/all.css" rel="stylesheet" />

    <link href="~/StaticFiles/jquery.multiselect.css" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@200;400;600;700&display=swap" rel="stylesheet">
  <link href="~/StaticFiles/jquery.mCustomScrollbar.min.css" rel="stylesheet" />
    <style>

        #chatWindow .formBase {
            background: url(https://hub-chat.telebu.com/StaticFiles/images/Chat_bg.png) no-repeat;
            background-size: cover;
        }

        .metaData {
            max-height: 215px;
        }

        #CusOldConversations {
            height: 180px
        }

            #CusOldConversations .chatBoxlist {
                margin-bottom: 20px
            }

        .chat-hr {
            border-top: none;
            border-bottom: 1px solid #e8e8e8;
        }

        .btnSubmit.small {
            padding: 6px 12px;
        }

        .multiselect-container {
            position: relative !important;
            width: 99%
        }

            .multiselect-container > li {
                padding: 5px !important
            }

                .multiselect-container > li > a > label {
                    padding: 0px !important;
                }

        .chat_form .multiselect-container input[type="checkbox"] {
            width: auto !important;
        }

        .chat_form button.multiselect {
            margin-bottom: 15px;
        }

        .chat_form .multiselect-container {
            margin-top: -15px;
        }
		#chatWindow.show{
			display:flex;
		}
    </style>
</head>
<body style="overflow:hidden;">

    <div id="blue" class="iconTheme">
        <div id="iframeBlock" class="frameBlock animated fadeInRight" style="display:block;">
            @*<iframe src="~/StaticFiles/Frame-Content.html" width="100%" height="100%" border="0"> </iframe>*@
            @*<iframe src="~/Views/_Layout1.cshtml" width="100%" height="100%" border="0"></iframe>*@
            @*<div class="frmContainer">*@
            <div class="frmContainer widgetTheme" id="navBlueTheme">
                <!--Form-->

                <div id="submitForm" class="hide">
                    <div class="formBanner">

                        <div class="bnrTitle mt10 center welcomeHeadding">Welcome to Hub Chat</div>
                        <br><br>
                    </div>
                    <div class="formBase">
                        <div class="formBlock">
                            <div>
                                <div class="f16 center mb5">Before Starting Conversation</div>
                                <div class="f12 center mb10">Please let us know your basic details for verfication</div>
                               <div class="center"><label class='text-danger f12 lblEditErrorMsg'></label></div>
                                <div class="metaData scroll">

                                    <div id="tblAddCallerDetails" class="active">

                                        @*<div class="form-group">
                                                <label class="form-label">Name</label>
                                                <input class="text-box" id="customerName" placeholder="eg. John Doe" />
                                                <div class="errMsg">Please enter your Name</div>
                                            </div>
                                            <div class="form-group">
                                                <label class="form-label">Email ID</label>
                                                <input class="text-box " id="customerEmailId" placeholder="stephen.lopez@gmail.com" />
                                                <div class="errMsg">Please enter your Email ID</div>
                                            </div>
                                            <div class="form-group">
                                                <label class="form-label">Mobile Number</label>
                                                <input class="text-box" onkeypress="return event.charCode >= 48 && event.charCode <= 57" id="customerMobileNo" placeholder="499-990-9189" />
                                                <div class="errMsg">Please enter your Mobile Number</div>
                                            </div>*@
                                    </div>


                                </div>
                                <div class="center mt-3">
                                    <button class="btnSubmit" id="Submit">Submit</button>
                                </div>
                            </div>



                        </div>
                    </div>
                </div><!--End Form-->
                <!--Chat-->
                <!--existing user-->
                <div id="ExistingUser" style="display:none">
                    <div class="formBanner">

                        <h4 class="bnrTitle mt10 mb-1 center welcomeHeadding">Welcome to Hub Chat</h4>
                        <p class="top_text">What can i help you with ?</p>
                        <br>
                    </div>
                    <div class="formBase">
                        <div class="formBlock mb-3">
                            <div class="mt-2">
                                <div class="f16 center mb-3">Your Conversations</div>

                                <div id="CusOldConversations">
                                </div>


                                <div class="center mt-4 mb-2">
                                    <button type="button" id="CusAllChats" class="btnSubmit mr-2 btn-half"><i class="far fa-comments mr-2"></i> All Chats</button>
                                    <button type="button" id="CusNewChat" class="btnSubmit btn-half"><i class="far fa-comment mr-2"></i> New Chat</button>
                                </div>

                            </div>



                        </div>
                    </div>
                </div>
                <!--end -->
                <!--all chats-->
                <div id="AllChats" style="display:none">
                    <div class="formBanner">
                        <h4 class="bnrTitle mt10"><i class="fa fa-angle-left mr-2 pointer" id="back"></i> All Conversations</h4>
                        <br>
                    </div>
                    <div class="formBase">
                        <div class="formBlock">
                            <div class="scroll allChatbox">
                                <div id="allConversations">

                                </div>

                                <!--<div class="link">
                                    <a>See All Conversations <i class="fa fa-angle-right ml-1"></i></a>
                                </div>-->

                            </div>

                        </div>
                        <div class="center mt-3">
                            <button type="button" class="btnSubmit" id="startNewConversation"><i class="far fa-comment mr-2"></i> Start New Conversation</button>
							 <div id="strtOverText" style="display:none;color:red;font-size: 14px;">You can't startover another conversation as there is an active conversation</div>
                        </div>
                    </div>
                </div>

                <!--end-->
                <div id="chatWindow" class="hide">
<div class="chat-dis">
                    <div class="formBanner clearfix">
                        <div class="pull-left">
                            <span class="mr-1" id="backToAllChats" style="display:none">
                                <i class="fa fa-chevron-left"></i>
                            </span>
                            <img src="~/StaticFiles/images/user.png" alt="chat-icon" />
                            <span class="bnrTitle" id="custName"></span>
                        </div>
                        <div class="pull-right mt-2">
                            <span class="mr-1 pointer" style="display:none"><img src="~/StaticFiles/images/down_icn.png" alt="" width="22" /></span>
                            <span class="mr-1 pointer" style="display:none"><img src="~/StaticFiles/images/mail-icn.png" alt="" width="22" /></span>
                            <span class="mr-1 pointer" id="customerAllChats" title="AllChats"><img src="~/StaticFiles/images/contact-icn.png" alt="" width="22" /></span>
                            <!--<span class="pointer"><img src="~/StaticFiles/images/close_icn.png" alt="" width="22" /></span>-->
                        </div>


                    </div>
                    <div class="formBase scroll">
                        <div id="conversation">
                        </div>
                    </div>
                    <div class="typeBlock">
                        <div class="center mb-2 startOver  mt-3" style="display:none"><button type="button" id="startOverBtn" class="btnSubmit">Start Over</button></div>
                        <div class="typeArea" style="display:none">
                            <input type="text" class="text-box" id="message" placeholder="type here…" />
                            <!--<img class="smiley" src="images/smiley.png" />-->
                            <img class="attach" src="~/StaticFiles/images/clip.png" alt="" id="fileAttach"  />
                            <input type="file" id="fileUpload" style="display: none" />
                            <span class="send" id="send"><i class="fa fa-paper-plane mt-3"></i></span>
                        </div>
                        <div class="poweredBy mb-1">Powered by Telebu</div>
                    </div>
 </div>
                </div>

                <!--End Chat-->
            </div>
        </div>

    </div>

    <script src="~/StaticFiles/js/jquery-1.11.3.min.js"></script>
    <script src="~/StaticFiles/jquery_ui.js"></script>
    <script src="~/StaticFiles/bootstrap.min.js"></script>
     @*<script src="https://cdn.socket.io/socket.io-1.2.0.js"></script>*@
	<script src="~/StaticFiles/js/socket.io-1.2.0.js"></script>
	<script src="~/StaticFiles/js/socket.io-stream.js"></script>
    <script src="~/StaticFiles/custom/WebSocketRequestBinding.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/malihu-custom-scrollbar-plugin/3.1.5/jquery.mCustomScrollbar.concat.min.js"></script>
    @*<script src="~/StaticFiles/custom/chat.js"></script>*@
    <script src="~/StaticFiles/custom/emailValidation.js?type=v7"></script>
    <script src="~/StaticFiles/js/jquery.multiselect.js"></script>
    <script>
		//console.log("@data.HttpReferrer");
        var webSocketRequestBinding = new WebSocketRequestBinding({});
        var socketBindingURL = "", endchat = "",isSubscribed=0;
        var isAgent = 0; success = 0, msg = "",msgCount = 0, convMsg = "",chatCloserTimer=0,custChatCloserTimer=0;
        var ws, conversationId = 0,chatConversation = "",Optionlist = [], agentTimer = 0,pingToken,chatcloser = 0,isReload=0,isDisconnect=0;
		var url = "https://hub-chat.telebu.com";
        // var url="http://hubchat.com";
        var isPingAgent=@data.IsPing;
         var imgUrl = url + "/StaticFiles/images/Sender-sm.png";
        var hitMsg = "", clientSocket, agentSocket, loadPing = 0, customerSocket, isSocketSubscribed = 0, firstHit = 0,msgIds=[], isClosed = 0;
        var is_endreason = 0, nowtime = "", receiveTime = "", sentTime = "", OldConversationIds = [],userId,base64String,extnsn,msgType;
        var widgetUUID = "@data.WidgetUuid"; 
        var CustomerChannelName;
       // localStorage.clear();
        var butt = "";
            var WidgetId =@data.WidgetId;
        var AccountId =@data.AccountId;
        var custTimer, botQuestions = [];
		 var timerArr = new Array();
		 var globalCountry,globalIp,globalchat={},global_Frmfld="";
		var global_ChatName="globalchat_"+AccountId;
		var fileName,fileSize,global_File,global_msgCount=0,global_BotFlowCompleted=0,global_ConversationEndchat=0;

        $(document).ready(function () {
           // GetCurrentWidgetConfiguration(WidgetId);
		     getCountry();
		     if(WidgetId == 3)
			$(".welcomeHeadding").text("Welcome to Ping Chat");
			else if(WidgetId == 4)
			$(".welcomeHeadding").text("Welcome to grptalk chat");
			else if(WidgetId == 7 || WidgetId == 8)
			$(".welcomeHeadding").text("Welcome to Telebu Support");
			
           if ((localStorage.getItem("PathName") != window.location.pathname) || localStorage.getItem("releaseDate") == null) {
               localStorage.clear();
               localStorage.setItem("PathName", window.location.pathname);
               localStorage.setItem("releaseDate", new Date());
           }
		   
		    if (localStorage.getItem("releaseDate") == null) {
                localStorage.clear();
                localStorage.setItem("releaseDate", new Date());
            }
            if (localStorage.getItem("isDisconnect") == null) {
                localStorage.setItem("isDisconnect", isDisconnect);
            }
            $(".scroll").mCustomScrollbar({
                theme: "minimal"
            });
            conversationId = localStorage.getItem("conversationId");
			if (localStorage.getItem("chattimer") != null && localStorage.getItem("chattimer")>0 && localStorage.getItem("chattimer") != undefined) {
				if(conversationId  != null &&conversationId  != undefined)
				customerChatCloserTimer(conversationId);
			}
			
			
			
            var oldActiveConversationId = localStorage.getItem("OldConversationIdActivetrue");
            if (oldActiveConversationId == "1") {
                funGetWidget(widgetUUID);
                $("#custName").text(localStorage.getItem("customerName"));
                getOldConversationHistory();
				 if (localStorage.getItem("Startoverenabled") == "true") {
				  $("#customerAllChats").trigger("click");}
                return false;
            }

            if (conversationId == 0 || conversationId == null || conversationId == "undefined") {
                localStorage.setItem("success", "0");
                localStorage.setItem("OldChatConversationId", "");
                localStorage.setItem("reopenOldConversation","" )
                if (localStorage.getItem("NoPreviewsData") == "0") {
                    funGetWidget(widgetUUID);
                    GetConversationMessages("1");
                        $("#chatWindow").addClass("hide");
                    $("#ExistingUser").show();
                    return false;
                } 
				//else {
				//	localStorage.clear();
                //}
               // localStorage.setItem("NoPreviewsData","1");
                localStorage.setItem("Customer_ChannelName", CustomerChannelName);
                funGetWidget(widgetUUID);

                if (localStorage.getItem("TimeToDisplayWelcomeFrom") == "At the start of the conversation") {

                GenerateDynamicWelcomeFrom();
                localStorage.setItem("isEndReason", is_endreason);
                $("#submitForm").removeClass("hide");


                } else if (localStorage.getItem("TimeToDisplayWelcomeFrom") == "Before connecting to an agent") {
                    localStorage.setItem("isEndReason", is_endreason);
                    loadChatWidget();
                } else if (localStorage.getItem("TimeToDisplayWelcomeFrom") == "After agent is connected") {
                    localStorage.setItem("isEndReason", is_endreason);
                    loadChatWidget();
                }

            }
            else {
                if (localStorage.getItem("AgentName") != null && localStorage.getItem("AgentName") != "" && localStorage.getItem("AgentName") != undefined) {
                    $("#custName").text(localStorage.getItem("AgentName"));
                }
                else
                    $("#custName").text(localStorage.getItem("customerName"));
				
				localStorage.setItem("success", "1");
				
                if (localStorage.getItem("AgentName") == null) {
                    $("#custName").text("Bot");
                }
                //imgUrl = "http://hubchat.com/StaticFiles/images/BotIcon.png";
				 imgUrl = "https://hub-chat.telebu.com/StaticFiles/images/BotIcon.png";
                 funGetWidget(widgetUUID);
                chatConversation = localStorage.getItem("ChatConversation");
				try{
					chatConversation = JSON.parse(chatConversation);
					}
					catch(e){}
				if (localStorage.getItem("botQuestions") != null)
                botQuestions = JSON.parse(localStorage.getItem("botQuestions"));
                for (var j = 0; j < chatConversation.length; j++) {
                    var temp1 = chatConversation;
                    var retValue1 = chatConversation[j];
                   // console.log(retValue1)
                    var resMsg1 = retValue1.text;
					 var attachment = retValue1.attachment;
					var msgTime = retValue1.timeStamp;
                    var recipient_id = retValue1.recipient_id;
					 var a="Customer_"+conversationId;
					var b="agent_"+conversationId;
					if(recipient_id == a || recipient_id == b || recipient_id == conversationId){
                    butt = "";
					 if (retValue1.hasOwnProperty("attachment")) {
					  if (retValue1.attachment.type == "video") {
                        var video_url = retValue1.attachment.payload.src;
                        var text1 = '<div class="video-container"> <iframe src="' + video_url + '" frameborder="0" allowfullscreen></iframe> </div>'
                        //$(BotResponse).appendTo(".chats").hide().fadeIn(1000);
						 $("#conversation").append(text1);
                                             $(".formBase").mCustomScrollbar("scrollTo","bottom");
                    }
					}
                    try {
			        if (retValue1.custom == undefined){}
			        else if(retValue1.custom[0].payload =="Endchat"){
                        endchat = retValue1.custom[0].payload;
                        if (endchat == "Endchat") {
                            if (localStorage.getItem("TimeToDisplayWelcomeFrom") == "Before connecting to an agent") {
                                if (localStorage.getItem("BeforeAgentWelcomeFromvalidation") == "0") {
                                    GenerateDynamicFrom();
                                    $(".formBase").mCustomScrollbar("scrollTo", "bottom");
                                    return false;
                                }
                            }
                           // imgUrl = "http://hubchat.com/StaticFiles/images/BotIcon.png";
							 imgUrl ="https://hub-chat.telebu.com/StaticFiles/images/BotIcon.png";
                            $(".typeArea").show();
                              //  customerWebSocketSubscription();
                                endchat = "TalkingToAgent";
                        }
						
						   if (retValue1.custom[0].text != undefined) { 
                            var text1 = '<div class="speechItem"><div class="clearfix"><img src="' + imgUrl + '" alt="" class="left"><div class="speechLeft">';
                                            text1 = text1 + '<p>' + retValue1.custom[0].text + '</p>' + butt + '</div></div>';


                $("#conversation").append(text1);
				}

                if (localStorage.getItem("NonBusinessHours") == "0") {
                    if (getDayAndTime(0) >= localStorage.getItem("FromTime") && getDayAndTime(0) <= localStorage.getItem("ToTime")) {

                    }
                    else {
                         var NonBusinessHoursMsg = '<div class="speechItem"><div class="clearfix"><img src="' + imgUrl + '" alt="" class="left"><div class="speechLeft">';
                        NonBusinessHoursMsg = NonBusinessHoursMsg + '<p>' + localStorage.getItem("NonBusinessHoursMessage") + '</p></div></div>';
                        $("#conversation").append(NonBusinessHoursMsg);
                        $(".formBase").mCustomScrollbar("scrollTo", "bottom");
                        return false;
                    }
                }

			}
			 else if(retValue1.custom[0].payload == "image"){
			 	var grptlk=retValue1.custom[0].text;
								 var text1 = '<div class="speechItem"><div class="clearfix"><img src="' + imgUrl + '" alt="" class="left"><div class="speechLeft">';
                                   // text1 = text1 + '<a href="'+grptlk+'" target="_blank"><img width="20%" height="10%" src="' + grptlk+ '" alt="" ><a></div></div>';
									text1 = text1 + '<a href="'+grptlk+'" target="_blank">'+grptlk+'<a></div></div>';
									 $("#conversation").append(text1);
                                             $(".formBase").mCustomScrollbar("scrollTo","bottom");
			 }
			  else if(retValue1.custom[0].payload == "excel" || retValue1.custom[0].payload == "pdf" ){
				var filePath =resMsg2[0].custom[0].text;
									  var text = "",extClass="",extnsn="";
									  
									  var regExp = /(?:\.([^.]+))?$/;
										extnsn = regExp.exec(filePath)[1];
										extnsn=extnsn.toLowerCase();
						
									if(extnsn == "pdf" || extnsn == "docx")
										extClass="far fa-file-pdf fa-2x";
									else if(extnsn == "xls" || extnsn == "xlsx" || extnsn == "csv")
										extClass="far fa-file-excel fa-2x";
								 
									 var text = '<div class="speechItem right"><div class="speechRight">';
									text = text + ' <div class="clearfix p-1 doc_attach"> <label class="pull-left mr-2 doc_icon"> <i class="'+extClass+'"></i> </label>  <label class="pull-left doc_name"> <a target="_blank" href="'+filePath+'">'+filePath+'</a></label> </div>';
									text = text + '<div class="time">' + sentTime + '</div></div>';
									
									$("#conversation").append(text1);
									 $(".formBase").mCustomScrollbar("scrollTo","bottom");
			  }
                    }
                    catch (e) { console.log(e); }
                    try {

                        if (retValue1.buttons == undefined) { }
			            else{

                            if (retValue1.buttons.length > 0 ) {
                                butt = '<div class="mt-2">';
                                var botQtnAns = "";
								try {
									for (var k = 0; k < botQuestions.length; k++) {
										if (resMsg1 == botQuestions[k].question  && botQuestions[k].recipient_id == conversationId) {
											botQtnAns = botQuestions[k].Values;
										}
									}
								}
								catch (e) {}
                                for (var i = 0; i < retValue1.buttons.length; i++) {


                                    if (botQtnAns != "") {
                                        if (retValue1.buttons[i].payload == "submit") {
                                            butt = butt + '<hr class="mt-2 mb-3 chat-hr">';
                                            butt = butt + '<div class="center"><button type="button" question="' + resMsg1 +'" onclick="submitAction(this)" value="Submit" class="btnSubmit small mr-2 mb-2 " disabled="disabled" style="cursor:not-allowed">Submit</button></div>'
                                        }
                                        else {

                                            if (botQtnAns == retValue1.buttons[i].title) {
                                                butt = butt + '<button type="button" onclick="btnAction(this)" value="' + retValue1.buttons[i].title + '" class="btnSubmit-sm mr-2 mb-2 select" disabled="disabled" style="cursor:not-allowed">' + retValue1.buttons[i].title + '</button>';
                                            }
                                            else {
                                                butt = butt + '<button type="button" onclick="btnAction(this)" value="' + retValue1.buttons[i].title + '" class="btnSubmit-sm mr-2 mb-2 " disabled="disabled" style="cursor:not-allowed">' + retValue1.buttons[i].title + '</button>';
                                            }
                                        }
                                    }
                                    else {

                                        if (retValue1.buttons[i].payload == "submit") {
                                            butt = butt.replace(/ action="submit"/g, "")
                                            butt = butt + '<hr class="mt-2 mb-3 chat-hr">'
                                            butt = butt + '<div class="center"><button type="button" question="' + resMsg1 +'" onclick="submitAction(this)" value="Submit" class="btnSubmit small mr-2 mb-2 ">Submit</button></div>'
                                        }
                                        else
                                            butt = butt + '<button type="button" onclick="btnAction(this)" value="' + retValue1.buttons[i].title + '" action="submit" class="btnSubmit-sm mr-2 mb-2" >' + retValue1.buttons[i].title + '</button>';
                                        }
                                    }
                                    butt = butt + '</div>';
                                }
			                }
                        }
                        catch (e) { console.log(e); }
                        if (recipient_id == conversationId) {
                            var conversation = '<div class="speechItem"><div class="clearfix"><img src="' + imgUrl + '" alt="" class="left"><div class="speechLeft">';
                            conversation = conversation + '<p>' + resMsg1 + '</p>' + butt + '</div></div>';
                        } else if (recipient_id == "agent_" + conversationId) {
                           imgUrl = "https://hub-chat.telebu.com/StaticFiles/images/Sender-sm.png";
							
							if(attachment == "1")
							{
									var conversation = "";
									conversation = conversation + '<div class="speechItem"><div class="clearfix">';
									conversation = conversation + '<img src="' + imgUrl + '" alt="" class="left mCS_img_loaded"/>';
									conversation = conversation + '<div class="speechLeft"><a target="_blank" href="'+resMsg1+'"><img src="' + resMsg1 + '" class="thumb_attach mCS_img_loaded" width="100"></a></div> ';
									conversation = conversation + '<div class="time">' + msgTime + '</div></div>';
							}
							else if(attachment == "2")
							{
								 var conversation = "";
								conversation = conversation + '<div class="speechItem"><div class="clearfix">';
								conversation = conversation + '<img src="' + imgUrl + '" alt="" class="left mCS_img_loaded"/>';
								  conversation = conversation + '<iframe class="thumb_attach" src="'+ resMsg1 +'" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="" style="pointer-events:auto;"></iframe>';
								conversation = conversation + '<div class="time">' + msgTime + '</div>';
							}
							else if(attachment == "6")
							{
								 var regExp = /(?:\.([^.]+))?$/;
								var	extnsn = regExp.exec(resMsg1)[1];
								extnsn=extnsn.toLowerCase();
								
								if(extnsn == "pdf" || extnsn == "docx")
								 extClass="far fa-file-pdf fa-2x";
							else if(extnsn == "xls" || extnsn == "xlsx" ||  extnsn == "csv")
								 extClass="far fa-file-excel fa-2x";
								 
						 var conversation = '<div class="speechItem"><div class="clearfix">';
						 conversation = conversation + '<img src="' + imgUrl + '" alt="" class="left mCS_img_loaded"/>';
						conversation = conversation + ' <div class="clearfix p-1 doc_attach"> <label class="pull-left mr-2 doc_icon"> <i class="'+extClass+'"></i> </label>  <label class="pull-left doc_name"> <a target="_blank" href="'+resMsg1+'">'+resMsg1+'</a></label> </div>';
						conversation = conversation + '<div class="time">' + msgTime + '</div></div>';
						
							}
							else{
							
                              var conversation = '<div class="speechItem"><div class="clearfix">'
                            conversation = conversation + '<img src="' + imgUrl + '" alt="" class="left" />'
                            conversation = conversation + '<div class="speechLeft"><p>' + resMsg1 + '</p></div></div>';
						    conversation = conversation + '<div class="time">' + msgTime + '</div></div>';
							}
                        }
                        else if (recipient_id == "Customer_"+conversationId){
                            var conversation = '<div class="speechItem right"><div class="speechRight">';
                            conversation = conversation + '<p>' + resMsg1 + '</p></div>';
						    conversation = conversation + '<div class="time">' + msgTime + '</div></div>';
                        }
					    if (resMsg1 != "undefined" && resMsg1 != undefined) {
                            $("#conversation").append(conversation);
                           // $("#conversation").stop().animate({ scrollTop: $("#conversation")[0].scrollHeight }, 1000);
                            $(".formBase").mCustomScrollbar("scrollTo", "bottom");
                        }

				        $("#submitForm").addClass("hide");
                        $("#chatWindow").removeClass("hide");
                      //  $("#chatWindow").addClass("show");
                        //$(".typeArea").show();
			            $(".formBase").mCustomScrollbar("scrollTo", "bottom");
						if (localStorage.getItem("Startoverenabled") == "true") {
						$(".startOver").show();
						$(".typeArea").hide();
						}
                        // document.getElementById("imgUrl").src=imgUrl; <div class="time">02:30 PM</div>
                    }
					}//for close
                    if (localStorage.getItem("success") == "0") {
                        $("#submitForm").removeClass("hide");
                        $("#chatWindow").addClass("hide");
                    }
                }
            });
            //$(".error").parent().find(".errMsg").show();
            //$("#Submit").click(function () {
            //    $("#submitForm").addClass("hide");
            //    $("#chatWindow").addClass("animated fadeInRight show");
            //});
			
			if (localStorage.getItem("Startoverenabled") == "true") {
                 $(".startOver").show();
				 $(".typeArea").hide();
            }
			
            customerWebSocketSubscription();
            if (localStorage.getItem("userId") != "" && localStorage.getItem("userId") != null) {
            SubscribeToSocket()
            isReload = 1;
    //            var str = 'ws://staging-ping.telebu.com/support';
    //            userId = localStorage.getItem("userId")
    //            customerSocket = io.connect(str, { query: 'userId=' + userId + '&mode=client' })
    //            customerSocket.on('connect', function () {
    //                console.log("connected");
    //                isSocketSubscribed = 1;
    //            });
				//customerSocket.on('newMessage', function (data) {
    //                console.log(data);
    //                agentTimer = 100;
    //                chatcloser = 100;
    //                clearInterval(agentTimer);
    //                clearInterval(chatcloser);
    //                customerChatCloserTimer();
    //                	conversationId = localStorage.getItem("conversationId");
    //                    nowtime = new Date();
				//		receiveTime = nowtime.toLocaleTimeString().replace(/([\d]+:[\d]{2})(:[\d]{2})(.*)/, "$1$3");
    //                    var CustomerMsg2 = JSON.parse('{"recipient_id":"agent_' + conversationId + '","text":"' + data.message + '","timeStamp":"' + receiveTime + '"}');
    //                    chatConversation = "";
    //                    convMsg = "";
    //                    chatConversation = localStorage.getItem("ChatConversation");

				//		if (chatConversation != "" && chatConversation != "undefined" && chatConversation != null && chatConversation != "[]") {
				//			chatConversation = chatConversation.slice(0, -1);
				//			convMsg = JSON.stringify(CustomerMsg2);
				//			chatConversation = chatConversation +","+ convMsg;
				//			chatConversation = chatConversation + ']';
				//			localStorage.setItem("ChatConversation",chatConversation);
				//			} else {
				//			localStorage.setItem("ChatConversation",JSON.stringify(CustomerMsg2));
    //                }
    //                 var IsPingAgent = localStorage.getItem("IsPingAgent");
    //                if (IsPingAgent == "true") {
    //                    toSendConversation_Of_aAgent_Customer(data.message, 4);
    //                    conversationMessageId = localStorage.getItem("ConversationMessageId");
    //                    updateConversationMessage(conversationMessageId);
    //                }
    //                $("#conversation").append('<div class="speechItem"><div class="clearfix"><img src="' + imgUrl + '" alt="" class="left"><div class="speechLeft"><p>' + data.message + '</p></div></div></div>');
    //                 $(".formBase").mCustomScrollbar("scrollTo","bottom");
    //            });
                    }


            $(document).delegate("#message", "keyup", function (event) {
                if (event.keyCode == 13) {
                    $("#send").click();
                    event.preventDefault();
                    return false;
                }
            });




            $("#send").click(function () {
                var msg = $("#message").val();
				
						if(msg != ""){
				extnsn="",fileName="",fileSize="";
				filePath="";
				base64String="";
				}
				if (extnsn != "" && extnsn != undefined)
					msg=base64String;
				if(global_Frmfld != "")
					msg =global_Frmfld;
                if (msg.trim() == "") {
                    return false;
                }
			    nowtime  = new Date();
			    sentTime = nowtime.toLocaleTimeString().replace(/([\d]+:[\d]{2})(:[\d]{2})(.*)/, "$1$3");
                if (msg == "") { return false;}
                hitMsg = msg;
                var text = '<div class="speechItem right"><div class="speechRight">';
                text = text + '<p>' + msg + '</p></div>';
                text = text + '<div class="time">' + sentTime + '</div></div>';


                if(extnsn == "png" || extnsn == "jpeg" || extnsn == "jpg" )
		            msgType ="1"
	            else if(extnsn == "xls" || extnsn == "xlsx" || extnsn == "pdf" || extnsn == "csv" || extnsn == "docx")
		            msgType ="6";
	            else if(extnsn == "mp3" || extnsn == "mp4")
		            msgType ="2";
	            else
		            msgType ="0";




            var OldChatConId =  localStorage.getItem("OldChatConversationId");
            var reopenOldConversation = localStorage.getItem("reopenOldConversation");




            if (OldChatConId != "" && OldChatConId != null) {
                 conversationId = localStorage.getItem("OldChatConversationId");
                chatConversation = "";
                convMsg = "";
                chatConversation = localStorage.getItem("reopenOldConversation");
					if(msgType == "0")
                $("#conversation").append(text);
                //$("#conversation").stop().animate({ scrollTop: $("#conversation")[0].scrollHeight }, 1000);
                $(".formBase").mCustomScrollbar("scrollTo", "bottom");
            } else {
			if(msgType =="0"){
                conversationId = localStorage.getItem("conversationId");
                chatConversation = "";
                convMsg = "";
                chatConversation = localStorage.getItem("ChatConversation");
                if (chatConversation != "" && chatConversation != "undefined" && chatConversation != null && chatConversation != "[]") {
                    var CustomerMsg = JSON.parse('{"recipient_id":"Customer_' + conversationId + '","text":"' + msg + '","timeStamp":"' + sentTime + '"}');
                    chatConversation = chatConversation.slice(0, -1);
                    convMsg = JSON.stringify(CustomerMsg);
                    chatConversation = chatConversation + "," + convMsg;
                    chatConversation = chatConversation + ']';
                    localStorage.setItem("ChatConversation", chatConversation);
                } else {
                    var CustomerMsg = JSON.parse('[{"recipient_id":"Customer_' + conversationId + '","text":"' + msg + '","timeStamp":"' + sentTime + '"}]');
                    localStorage.setItem("ChatConversation", JSON.stringify(CustomerMsg));
                }
                $("#conversation").append(text);
               // $("#conversation").stop().animate({ scrollTop: $("#conversation")[0].scrollHeight }, 1000);
                $(".formBase").mCustomScrollbar("scrollTo", "bottom");
				}
            }
            if (isSocketSubscribed == 1 && endchat != "") {
		        conversationId = localStorage.getItem("conversationId");
                var jsonObj = {};
                if (isAgent == 1) {
                    if (firstHit == 0) {
                        UpdateAgentsForHubchat('on call', 2058);
                    }
                    jsonObj = { "conversationId": "200", "from": "1000", "to": "1001", "messageType": "0", "message": hitMsg, "mediaUrl": "" };
                    agentSocket.emit('newMessage', jsonObj, function (data) { console.log(data); });
                    firstHit = 1;
                    if (hitMsg.toLowerCase() == "bye") {
                        UpdateAgentsForHubchat('ready', 2058);
                    }
                }
                else {
				 
				var agentId = localStorage.getItem("pingAgentId");
                    conversationId = localStorage.getItem("conversationId");
                    chatConversation = localStorage.getItem("ChatConversation");
                    var IsPingAgent = localStorage.getItem("IsPingAgent");
                    var fromId = localStorage.getItem("userId");

	
				if(msgType != "0"){
					//var filePath;
					try
					{
					if (IsPingAgent == "true") 
                        fromId= conversationId;
                     else 
                           fromId=fromId
                    
						var img_jsonObj={"size": fileSize, "ImageName": fileName, "ext": extnsn,"timestamp": Date.now(),"from": fromId}; 
						//var ss = require('socket.io-stream');
						var stream = ss.createStream();
						ss(customerSocket).emit('fileUpload', stream, img_jsonObj);
						ss.createBlobReadStream(global_File).pipe(stream);
						
						//fs.createReadStream(fileName).pipe(stream);
						 var binaryString = "";
						
						ss(customerSocket).on('file', function(stream) {
						 // fs.createReadStream('/path/to/file').pipe(stream);
						});
						
					  
					}
					catch(e){console.log(e);}
					//return false;

						
					var img_jsonObj={"conversationId": conversationId, "from":conversationId, "buffer":base64String,"ext":extnsn}; 
					console.log(img_jsonObj);
					
						
						
						
						
						extnsn="",filePath="",base64String="";
				}
				else{
                    
                    if (IsPingAgent == "true") {
                        jsonObj = { "conversationId": conversationId, "from": conversationId, "to":agentId , "messageType": "0", "message": hitMsg };
                    } else {
                            jsonObj = { "conversationId": conversationId, "from": fromId, "to": agentId, "messageType": "0", "message": hitMsg };
                    }
                    // jsonObj = { "conversationId": "200", "from": "1001", "to": ""5d820a80c3ad6403558f612d"", "messageType": "0", "message": hitMsg, "mediaUrl": "" };
                    clearInterval(timerArr[conversationId]);
                    timerArr[conversationId] = 0;
                    chatcloser = 0;
					localStorage.setItem("chattimer",chatcloser);
										  globalchat.chattimer = chatcloser;
					  localStorage.setItem(global_ChatName,JSON.stringify(globalchat));
                    customerChatCloserTimer(conversationId);

                    customerSocket.emit('newMessage', jsonObj, function (data) {
						custChatCloserTimer = 0;	
                         chatcloser =0;	
						 localStorage.setItem("chattimer",chatcloser);	
                        customerChatCloserTimer();
                        recordId = [];
                        console.log(data.recordId);
                        toSendConversation_Of_aAgent_Customer(hitMsg, 3);
                        recordId.push(data.recordId);
                        var dlvryObj = { "conversationId": conversationId, "recordId": recordId, "status": "3" };
                        customerSocket.emit('messageAck', dlvryObj, function (data) {
                            console.log(data);
                            if (data.msg == "success") {
                                console.log(localStorage.getItem("ConversationMessageId"));
                                conversationMessageId = localStorage.getItem("ConversationMessageId");
                                updateConversationMessage(conversationMessageId);
                            }
                        });
                    });
                }
				}
            }
            //else if (endchat == "Endchat") {
            //    var isPing = GetAgentsForHubchat();
            //    if (isPing == 1) {
            //        SubscribeToSocket();
            //    } else {
            //        if (isSubscribed != 1) {
            //            webSocketSubscription()
            //        }
            //        //InsertConversation(msg)
            //        endchat = "TalkingToAgent";
            //    }
            //    $("#message").val('');
            //    return false;
            //}
            else if (endchat == "TalkingToAgent") {
                toSendConversation_Of_aAgent_Customer(msg, 3);
                InsertConversation(msg);

                $("#message").val('');
                return false;
            }
            $("#message").val('');
            if (isAgent == 0 && (endchat == "" || endchat == undefined)) {
				conversationId = localStorage.getItem("conversationId");	
                 BotInteraction(conversationId, msg);
            }
			extnsn="",filePath="",base64String="";
        });
        function BotInteraction(conversationId, msg) {
            if (msg == "Yes") {
                if (localStorage.getItem("IsUsed")== "1")
                msg = "/affirm{\"group\":\"Yes\"}";
                }
            else if (msg == "No") {
                if (localStorage.getItem("IsUsed")== "1")
                 msg = "/deny{\"group\":\"No\"}";
            }
               var g=@x;
            var WidgetId =@data.WidgetId;
            var AccountId =@data.AccountId;
           var url ="https://hub-chat.telebu.com";
	   nowtime = new Date();
            sentTime = nowtime.toLocaleTimeString().replace(/([\d]+:[\d]{2})(:[\d]{2})(.*)/, "$1$3");
           // var url ="http://hubchat.com";
            var imgUrl = url + "/StaticFiles/images/BotIcon.png";
            is_endreason = localStorage.getItem("isEndReason");
			if(is_endreason == "0")
			{
			 $(".typeArea").hide();
			}
            var url2 = url + "/accounts/" + AccountId + "/widgets/" + WidgetId + "/conversations/" + conversationId + "/" + is_endreason + "/replies/";

            var Data2 = JSON.stringify({
                "MessageTypeId": "1",
                "Message":msg
            });
            $.ajax({
                type: "POST",
                url: url2,
                dataType: "JSON",
                contentType: "application/json",
                async: false,
                data: Data2,
                success: function (res) {

                    var t = JSON.parse(res.Message);
                    convMsg = "";
                    butt = "";
                    chatConversation = "";
                    chatConversation = localStorage.getItem("ChatConversation");
                    if (chatConversation != "" && chatConversation != "undefined" && chatConversation != null && chatConversation != "[]") {
                        chatConversation = chatConversation.slice(0, -1);
                        convMsg = JSON.stringify(t);
                        convMsg = convMsg.substring(1, convMsg.length - 1);
                        chatConversation = chatConversation + "," + convMsg;
                        chatConversation = chatConversation + ']';
                        localStorage.setItem("ChatConversation", chatConversation);
                    } else {
                        localStorage.setItem("ChatConversation", JSON.stringify(t));
                    }


                    //alert(t.length)
                    for (var j = 0; j < t.length; j++) {
                        var temp1 = JSON.parse(res.Message);
                        var retValue = JSON.parse(res.Message)[j];
                        console.log(retValue)
                        butt = "";
                        var resMsg = retValue.text;
						
						var wanasa="Welcome to WanasaTime – The One-Stop Entertainment Platform";
						if(resMsg == wanasa)
							PostCountryToRasa()
							
							
						  var grptkendchat1 = "No worries! We are available on your beck and call if you need anything. Please continue browsing and have a great day!";
						  var grptkendchat2="No problem :) Please feel free to initiate a conversation at any point of time. Have a great day!";
						  var grptkendchat3="We understand. Please feel free to initiate a conversation at any point of time. Have a great day :)";
                        if (resMsg == grptkendchat1 || resMsg == grptkendchat2 || resMsg == grptkendchat3)
                        {
                              UpdateTocloseChat(1,conversationId);
							   UpdateBotFlowEnd(1, conversationId);
                            var name="isAgentconnected_"+conversationId;
					         localStorage.setItem(name,0);
					          localStorage.setItem("isEndReason", 1);
					         $(".startOver").children().attr("ActualConversationId", conversationId);
					        localStorage.setItem("Startoverenabled", "true");
				            $(".startOver").show();
                            $(".typeArea").hide();
							 var text1 = '<div class="speechItem"><div class="clearfix"><img src="' + imgUrl + '" alt="" class="left"><div class="speechLeft">';
							  text1 = text1 + '<p>' + resMsg + '</p></div></div>';
                                   // text1 = text1 + '<img src="' + resMsg + '" alt="" ></div></div>';
									 $("#conversation").append(text1);
                                             $(".formBase").mCustomScrollbar("scrollTo","bottom");
                            return false;
                        }
						 if (retValue.hasOwnProperty("attachment")) {
                    //check if the attachment type is "video"
                    if (retValue.attachment.type == "video") {
                        var video_url = retValue.attachment.payload.src;
                        var text1 = '<div class="video-container"> <iframe src="' + video_url + '" frameborder="0" allowfullscreen></iframe> </div>'
                        //$(BotResponse).appendTo(".chats").hide().fadeIn(1000);
						 $("#conversation").append(text1);
                                             $(".formBase").mCustomScrollbar("scrollTo","bottom");
                    }
                }
				if(retValue.hasOwnProperty("image")){
				 var text1 = '<div class="speechItem"><div class="clearfix"><img src="' + imgUrl + '" alt="" class="left"><div class="speechLeft">';
                                    text1 = text1 + '<img src="' + retValue.image+ '" alt="" ></div></div>';
									 $("#conversation").append(text1);
                                             $(".formBase").mCustomScrollbar("scrollTo","bottom");
				}

                        try {
                            if (retValue.custom == undefined) {
                            }
                            else {
                                endchat = retValue.custom[0].payload;
								if(endchat == "image"){
								var grptlk=retValue.custom[0].text;
								 var text1 = '<div class="speechItem"><div class="clearfix"><img src="' + imgUrl + '" alt="" class="left"><div class="speechLeft">';
                                    text1 = text1 + '<a href="'+grptlk+'" target="_blank">'+grptlk+'<a></div></div>';
									//text1 = text1 + '<a href="'+grptlk+'" target="_blank"><img width="20%" height="10%" src="' + grptlk+ '" alt="" ><a></div></div>';
									 $("#conversation").append(text1);
                                             $(".formBase").mCustomScrollbar("scrollTo","bottom");
										// return false;
										//<a href="https://i.ibb.co//34D8SNY//grptalk.jpg" target="_blank"><img src="https://i.ibb.co//34D8SNY//grptalk.jpg" //width="20%" height="10%" ></a>
								}
								else if(endchat == "Form_Field"){
								
									var text1 = '<div class="center"><label class="text-danger f12 lblEditErrorMsg1"></label>';
									text1 =text1+'<input fieldtype="TextBox" id="frmfield"  placeholder="enter email or mobile" maxlength="50" autocomplete="off" class="text-box field EmailField txtRequired ">';
									text1 = text1 + '<button class="btnSubmit" id="Submit1">Submit</button></div>';
									
									
									 $("#conversation").append(text1);
                                      $(".formBase").mCustomScrollbar("scrollTo","bottom");
								
								}
                                else if (endchat == "Endchat") {
								 UpdateBotFlowEnd(1, conversationId);
                                    if (localStorage.getItem("NonBusinessHours") == "0") {
                                        console.log(getDayAndTime(0));
                                        if (getDayAndTime(0) >= localStorage.getItem("FromTime") && getDayAndTime(0) <= localStorage.getItem("ToTime")) {
                                            if (localStorage.getItem("TimeToDisplayWelcomeFrom") == "Before connecting to an agent") {
                                                localStorage.setItem("BeforeAgentWelcomeFromvalidation","0");
                                            } else {
                                                customerTimer();
                                                localStorage.setItem("isEndReason", 1);
                                                GetAgentsForHubchat();
                                               // $(".typeArea").show();
                                            }
                                        } else {
                                             var text1 = '<div class="speechItem"><div class="clearfix"><img src="' + imgUrl + '" alt="" class="left"><div class="speechLeft">';
                                             text1 = text1 + '<p>' + localStorage.getItem("NonBusinessHoursMessage") + '</p></div></div><div class="time">' + sentTime + '</div>';
                                             $("#conversation").append(text1);
                                             $(".formBase").mCustomScrollbar("scrollTo","bottom");
                                            return false;
                                        }
                                    } else if (localStorage.getItem("NonBusinessHours") == "1") {
                                        var text1 = '<div class="speechItem"><div class="clearfix"><img src="' + imgUrl + '" alt="" class="left"><div class="speechLeft">';
                                        text1 = text1 + '<p>' + localStorage.getItem("NonBusinessHoursMessage") + '</p></div></div><div class="time">' + sentTime + '</div>';
                                         $("#conversation").append(text1);
                                         $(".formBase").mCustomScrollbar("scrollTo","bottom");
                                        return false;
                                    }

                                    var text1 = '<div class="speechItem"><div class="clearfix"><img src="' + imgUrl + '" alt="" class="left"><div class="speechLeft">';
                                    text1 = text1 + '<p>' + retValue.custom[0].text + '</p>' + butt + '</div></div><div class="time">' + sentTime + '</div>';

                                    if (localStorage.getItem("TimeToDisplayWelcomeFrom") == "Before connecting to an agent") {
                                        text1 = "";
                                        GenerateDynamicFrom();

                                    } else {

										
										if (localStorage.getItem("isEndReason") == 1 && retValue.custom[0].text == "" ) {
                                            text1 = "";
                                            text1 = text1 + '<div class="speechItem"><div class="clearfix"><img src="' + imgUrl + '" alt="" class="left"><div class="speechLeft"><p>' + localStorage.getItem("WhileConnectingToAnAgent") + '</p></div></div><div class="time">' + sentTime + '</div>';
                                        }
										//toSendConversation_Of_aAgent_Customer(localStorage.getItem("WhileConnectingToAnAgent"), 4);
										//var jsnMsg='[{"text":"' + localStorage.getItem("WhileConnectingToAnAgent") + '"}]';
										//toSendConversation_Of_aAgent_Customer(jsnMsg, 2);
                                        $("#conversation").append(text1);
										 $(".formBase").mCustomScrollbar("scrollTo", "bottom");
                                    }



                                    //else {
                                    //     $(".typeArea").show();
                                    //}

                                    //$("#conversation").stop().animate({ scrollTop: $("#conversation")[0].scrollHeight }, 1000);
                                    $(".formBase").mCustomScrollbar("scrollTo", "bottom");
                                    return false;
                                }
                            }
                        }
                        catch (e) { console.log(e); }
                        try {
                            if (retValue.buttons == undefined) { }
                            else {

                                if (retValue.buttons.length > 0) {
                                    butt = '<div class="mt-2">';
                                    for (var i = 0; i < retValue.buttons.length; i++) {
                                        if (retValue.buttons[i].payload == "submit") {
                                            butt = butt.replace(/ action="submit"/g,"")
                                            butt = butt + '<hr class="mt-2 mb-3 chat-hr">'
                                            butt = butt + '<div class="center"><button type="button" question="' + resMsg+'" onclick="submitAction(this)" value="Submit" class="btnSubmit small mr-2 mb-2 ">Submit</button></div>'
                                        }
                                        else
                                            butt = butt + '<button type="button" onclick="btnAction(this)" value="' + retValue.buttons[i].title + '" action="submit" class="btnSubmit-sm mr-2 mb-2 ">' + retValue.buttons[i].title + '</button>';
                                    }
                                    butt = butt + '</div>';
                                }
                            }
                        }
                        catch (e) { console.log(e); }
                        var text = '<div class="speechItem"><div class="clearfix"><img src="' + imgUrl + '" alt="" class="left"><div class="speechLeft">';
                       if (resMsg == "Are you currently using any call center software?" || resMsg =="Have you used a conferencing solution before?"){
					   //if (resMsg == "Are you currently using any call center software?") {
                            localStorage.setItem("IsUsed", "1");
                        } else {
                            localStorage.setItem("IsUsed", "0");
                        }
                        text = text + '<p>' + resMsg + '</p>' + butt + '</div></div><div class="time">' + sentTime + '</div>';
						if(resMsg != undefined)
                        $("#conversation").append(text);
                        //$("#conversation").stop().animate({ scrollTop: $("#conversation")[0].scrollHeight }, 1000);
                        $(".formBase").mCustomScrollbar("scrollTo", "bottom");
                        //if (resMsg == "Please answer the following questions to help us serve you better:") {
                        //    $("#submitForm").removeClass("hide");
                        //    $("#chatWindow").addClass("hide");
                        //    return false;
                        //}
                        $("#chatWindow").removeClass("hide");

                        if ($('.iconClose').hasClass('show')) {
                            msgCount = 0;
                            $("#notificationCount").text(msgCount);
                            $(".chat_notify").hide();

                        } else {
                            msgCount = msgCount + 1;
                            $("#notificationCount").text(msgCount);
                            $(".chat_notify").show();
                        }
                        // document.getElementById("imgUrl").src=imgUrl; <div class="time">02:30 PM</div>
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                   // alert(textStatus);
				   console.log(textStatus);
                }
            });
        }
        ////function PostToAgent(conversationId) {
        ////    var postURL = "http://localhost:64811/test.aspx?ConversationId=" + conversationId;
        ////    //var postURL = "https://web.press3.io//Test.aspx?ConversationId=" + conversationId;
        ////    var Data2 = JSON.stringify({
        ////        "ConversationId": conversationId
        ////    });
        ////    $.ajax({
        ////        type: "GET",
        ////        url: postURL,
        ////        dataType: "json",
        ////        async: false,
        ////        success: function (res) {
        ////            console.log(res);
        ////            if (res.message == "success") {
        ////                socketBindingURL = res.socketUrl;
        ////                success = 1;
        ////                // SubscribeToSocket();
        ////            }
        ////            //var a=JSON.parse(res)
        ////           //console.log(a);
        ////        },
        ////        error: function (jqXHR, textStatus, errorThrown) {
        ////            console.log(errorThrown);
        ////            console.log(textStatus);
        ////        }
        ////    });
        ////}
        $(".btnSubmit-sm").on("click", function(){
            var buttval = $(".btnSubmit-sm").text();
            $("#message").val(buttval);
            $("#send").click();
        })
        function btnAction(obj) {
            var a = $(obj).attr('value');
            var selectEle = $(obj);

           if (a == "Yes" || a == "No" || a == "Movies"||a == "Events" ||a == "Others") {
                selectEle.addClass("select");
                selectEle.parent().find("button").attr("disabled","disabled");
			    selectEle.parent().find("button").css("cursor","not-allowed");
                if (localStorage.getItem("botQuestions") != null) {
                    botQuestions = JSON.parse(localStorage.getItem("botQuestions"));
                } else {
                    botQuestions = [];
                }
				conversationId = localStorage.getItem("conversationId");
                botQuestions.push(JSON.parse('{"question":"' + selectEle.parent().parent().find("p").text() + '","Values":"' + a + '" ,"recipient_id":"'+conversationId+'"}'));
                localStorage.setItem("botQuestions", JSON.stringify(botQuestions));
				endchat="";
                $("#message").val(a);
                $("#send").click();
            } else {

                if (!Optionlist.includes(a)) {
                    Optionlist.push(a);
                    selectEle.addClass("select");
                } else {
                    //Optionlist.pop(a);
                    var index;
                    if ((index = Optionlist.indexOf(a)) !== -1)
                        Optionlist.splice(index, 1);
                    selectEle.removeClass("select");
                }
                if ($(obj).attr('action') == "submit") {
                    selectEle.parent().find("button").attr("disabled","disabled");
                    selectEle.parent().find("button").css("cursor", "not-allowed");
					
					if (localStorage.getItem("botQuestions") != null) {
                    botQuestions = JSON.parse(localStorage.getItem("botQuestions"));
					conversationId = localStorage.getItem("conversationId");
                    botQuestions.push(JSON.parse('{"question":"' + selectEle.parent().parent().find("p").text() + '","Values":"' + a + '","recipient_id":"'+conversationId+'"}'));
                    localStorage.setItem("botQuestions", JSON.stringify(botQuestions));
					endchat = "";
                    $("#message").val(a);
                    $("#send").click();

                    Optionlist = [];
					}
                }
            }
        }
        function submitAction(obj) {
            if (Optionlist.length > 0) {
                var options = "";
                for (var f = 0; f < Optionlist.length; f++) {
                    options += Optionlist[f];
                    options += ",";
                }
                options = options.substring(0, options.length - 1)

                $("#message").val(options);

                Optionlist = [];
            }
            else
                return false

            var selectEle = $(obj);
            if (localStorage.getItem("botQuestions") != null) {
                botQuestions = JSON.parse(localStorage.getItem("botQuestions"));
            }
			conversationId = localStorage.getItem("conversationId");
            botQuestions.push(JSON.parse('{"question":"' + selectEle.attr("question") + '","Values":"' + options + '","recipient_id":"'+conversationId+'"}'));
            localStorage.setItem("botQuestions", JSON.stringify(botQuestions));

            selectEle.parent().parent().find("button").attr("disabled","disabled");
			selectEle.parent().parent().find("button").css("cursor","not-allowed");
            $("#send").click();
        }
        function logRes(json) {
            console.log(json);
        }
        function SubscribeToSocket() {
            loadPing = 1;
            //var str = 'ws://staging-ping.telebu.com/support';
	  var str ='wss://chat-ping.telebu.com/support';

            if (isAgent == 1) {
                 console.log("connect");
            }
            else {
                var fromId = localStorage.getItem("userId");
                var qry = 'userId=' + fromId + '&mode=client';
                console.log(qry);
                //customerSocket = io.connect(str, { query: 'userId=' + userId + '&mode=client' })
               // customerSocket = io.connect(str, { query: qry })
                if (localStorage.getItem("isDisconnect") == "0" || localStorage.getItem("isDisconnect") ==  null) {
                    customerSocket = io.connect(str, { query: qry })
                }
                else {
					//try{
                   // customerSocket.connect();
					//}
					//catch (e) {
					//console.log(e);
					customerSocket = io.connect(str, { query: qry ,forceNew: true});
					//}
                }
			 
			  try{
               customerSocket.on('connect', function () {
                   console.log("connected");
                   isSocketSubscribed = 1;
                });
				}
				catch(e){}
				
				 customerSocket.on('disconnect', function () {
                   console.log("disconnected");
                   
                });

				
                conversationId = localStorage.getItem("conversationId");
                var agentId = localStorage.getItem("pingAgentId");
               var IsPingAgent = localStorage.getItem("IsPingAgent");

                var cust_jsonObj;
                    if (IsPingAgent == "true") {
                        cust_jsonObj = { "conversationId": conversationId, "from": conversationId, "to": agentId, "messageType": "0", "message": "Customer OnBoard" };
                    } else {
                         cust_jsonObj = { "conversationId": conversationId, "from": fromId, "to": agentId, "messageType": "0", "message": "Customer OnBoard" };
                    }
					
			 			customerSocket.on('uploadSuccess', function (data) {
							console.log(data);
									console.log(data);
							 filePath=data.mediaUrl;
							if (IsPingAgent == "true") {
                        jsonObj = { "conversationId": conversationId, "from": conversationId, "to":agentId , "messageType": msgType, "message": "", "mediaUrl": filePath };
                    } else {
                            jsonObj = { "conversationId": conversationId, "from": fromId, "to": agentId, "messageType": msgType,
							"message": "", "mediaUrl": filePath };
                    }
					
					clearInterval(timerArr[conversationId]);
                    timerArr[conversationId] = 0;
                    chatcloser = 0;
					localStorage.setItem("chattimer",chatcloser);
					globalchat.chattimer = chatcloser;
					localStorage.setItem(global_ChatName,JSON.stringify(globalchat));
                    customerChatCloserTimer(conversationId);

					customerSocket.emit('newMessage', jsonObj, function (data) { 
							//console.log(data); 
							recordId = [];
                        console.log(data.recordId);
						try{
						 filePath =filePath.replace("./", "/");
						 filePath="https://chat-ping.telebu.com"+filePath ;
						 //filePath="https://ping.telebu.com"+filePath ;
						 }
						   catch (e) { console.log(e); }
						var regExp = /(?:\.([^.]+))?$/;
							extnsn = regExp.exec(filePath)[1];
							extnsn=extnsn.toLowerCase();
							
						if( msgType == "1")
							hitMsg='[{"custom":[{"payload":"image","text":"'+filePath+'"}]}]';
						else if( msgType == "2")
							 hitMsg='[{"attachment":{"payload":{"src":"'+filePath+'"},"type":"video"}}]';
						else if( msgType == "6" && (extnsn == "xls" || extnsn == "xlsx" || extnsn == "csv"))
							hitMsg='[{"custom":[{"payload":"excel","text":"'+filePath+'"}]}]';
						else if( msgType == "6" &&( extnsn == "pdf"  || extnsn == "docx"))
							hitMsg='[{"custom":[{"payload":"pdf","text":"'+filePath+'"}]}]';
							  
							
						appendToConversation(filePath,extnsn);
                        toSendConversation_Of_aAgent_Customer(hitMsg, 3);
                        recordId.push(data.recordId);
                        var dlvryObj = { "conversationId": conversationId, "recordId": recordId, "status": "3" };
                        customerSocket.emit('messageAck', dlvryObj, function (data) {
                            console.log(data);
                            if (data.msg == "success") {
                                console.log(localStorage.getItem("ConversationMessageId"));
                                conversationMessageId = localStorage.getItem("ConversationMessageId");
                                updateConversationMessage(conversationMessageId);
                            }
                        });
						
					
								});
                  
                });
                // var cust_jsonObj = { "conversationId": conversationId, "from": conversationId, "to": agentId, "messageType": "0", "message": "Customer OnBoard", "mediaUrl": "" };//
               // if (isReload == 0) {
				//	try{
					//customerSocket.emit('newMessage', cust_jsonObj, function (data) { console.log(data); });
					//}
					//catch(e){}
				
               // }
			customerSocket.on('newMessage', function (data) 
				{
				try{
				if(msgIds.includes(data.id))
					return false;
				}
				catch(e){}
				
				//if(!$("#TelebuPOP_frame").hasClass('show')){
				if (!($('.iconClose').hasClass('show'))) {
			global_msgCount = global_msgCount + 1;
			 $("#notificationCount").text(global_msgCount);
            $(".chat_notify").show();
			 $(".chat_notify").css("display","");
			 $("#notificationCount").show();
			 $("#notificationCount").css("display","");
				 
			 
			} 
			else {
            global_msgCount = 0;
            $("#notificationCount").text(global_msgCount);
            $(".chat_notify").hide();
			}
					msgIds.push(data.id);
                    console.log(data);
					custChatCloserTimer = 0;
                    //agentTimer = 100;
                    chatcloser =0; //100
                    clearInterval(agentTimer);

                    clearInterval(timerArr[data.conversationId]);
                    timerArr[data.conversationId] = 0;
					localStorage.setItem("chattimer",chatcloser);
					 globalchat.chattimer = chatcloser ;
					  localStorage.setItem(global_ChatName,JSON.stringify(globalchat));
                    customerChatCloserTimer(data.conversationId);
                    	conversationId = localStorage.getItem("conversationId");
                        nowtime = new Date();
						//receiveTime = nowtime.toLocaleTimeString().replace(/([\d]+:[\d]{2})(:[\d]{2})(.*)/, "$1$3");
                        var CustomerMsg2 = JSON.parse('{"recipient_id":"agent_' + conversationId + '","text":"' + data.message + '","timeStamp":"' + receiveTime + '"}');
                        chatConversation = "";
                        convMsg = "";
                        chatConversation = localStorage.getItem("ChatConversation");

						//if (chatConversation != "" && chatConversation != "undefined" && chatConversation != null && chatConversation != "[]") {
						//	chatConversation = chatConversation.slice(0, -1);
							//convMsg = JSON.stringify(CustomerMsg2);
							//chatConversation = chatConversation +","+ convMsg;
							//chatConversation = chatConversation + ']';
							//localStorage.setItem("ChatConversation",chatConversation);
							//} else {
							//localStorage.setItem("ChatConversation",JSON.stringify(CustomerMsg2));
							//}
						var	attachment;
						 
						var imgUrl = "https://hub-chat.telebu.com/StaticFiles/images/Sender-sm.png";
                    if (IsPingAgent == "true") {
                        toSendConversation_Of_aAgent_Customer(data.message, 4);
                       // conversationMessageId = localStorage.getItem("ConversationMessageId");
                       // updateConversationMessage(conversationMessageId);
						
						 var dlvryObj = { "conversationId": data.conversationId, "recordId": data.recordId, "status": "3" };
                        customerSocket.emit('messageAck', dlvryObj, function (data) {
                            console.log(data);
                            if (data.msg == "success") {
                                console.log(localStorage.getItem("ConversationMessageId"));
                                conversationMessageId = localStorage.getItem("ConversationMessageId");
                                updateConversationMessage(conversationMessageId);
                            }
                        });
						
                    }
                      if(data.type == "0")
                    {
                    $("#conversation").append('<div class="speechItem"><div class="clearfix"><img src="' + imgUrl + '"  class="left" alt=""><div class="speechLeft"><p>' + data.message + '</p></div></div><div class="time">' + receiveTime + '</div></div>');
                     $(".formBase").mCustomScrollbar("scrollTo","bottom");
					 }

						else if( data.type == "1")
					 {

						var url=(data.mediaUrl).replace("./", "/");
						 url="https://ping.telebu.com"+url ;
						console.log(url);
						var text = "";
						text = text + '<div class="speechItem"><div class="clearfix">';
						text = text + '<img src="' + imgUrl + '" alt="" class="left mCS_img_loaded"/>';
						text = text + '<div class="speechLeft"><a target="_blank" href="'+url+'"><img src="' + url + '" class="thumb_attach mCS_img_loaded" width="100"></a></div></div>';
						text = text + '<div class="time">' + receiveTime + '</div></div>';

						//data.message='[{"custom":[{"payload":"image","text":"'+url+'"}]}]';
						data.message=url;
						attachment="image";
						//data.message=JSON.parse(data.message);

						$("#conversation").append(text);
						 $(".formBase").mCustomScrollbar("scrollTo","bottom");
					 }
					 	  else if(data.type == "2")
						  {
					   var videoUrl=(data.mediaUrl).replace("./", "/");
					 var url="https://ping.telebu.com"+videoUrl ;
					  console.log(url);

							  var text = "";
						text = text + '<div class="speechItem"><div class="clearfix">';
						text = text + '<img src="' + imgUrl + '" alt="" class="left mCS_img_loaded"/>';
						  text = text + '<iframe class="thumb_attach" src="'+ url +'" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="" style="pointer-events:auto;"></iframe>';
						text = text + '<div class="time">' + receiveTime + '</div>';

						//data.message='[{"attachment":{"payload":{"src":"'+url+'"},"type":"video"}}]';
						data.message=url;
						attachment="video";
						//data.message=JSON.parse(data.message);

						$("#conversation").append(text);
						 $(".formBase").mCustomScrollbar("scrollTo","bottom");

						}
						 else if(data.type == "6"){


							   var pathUrl=(data.mediaUrl).replace("./", "/");
					 var filePath="https://ping.telebu.com"+pathUrl ;

					 var regExp = /(?:\.([^.]+))?$/;
						var	extnsn = regExp.exec(pathUrl)[1];
						extnsn=extnsn.toLowerCase();

					  var extClass;
							if(extnsn == "pdf"|| extnsn == "docx"){
								 extClass="far fa-file-pdf fa-2x";
								 attachment="pdf";}
							else if(extnsn == "xls" || extnsn == "xlsx" ||  extnsn == "csv"){
								 extClass="far fa-file-excel fa-2x";
								 attachment="excel";
								 }



							  var text = "";
						text = text + '<div class="speechItem"><div class="clearfix">';
						text = text + '<img src="' + imgUrl + '" alt="" class="left mCS_img_loaded"/>';
						text = text + '<div class="speechLeft"><div class="clearfix p-1 doc_attach"> <label class="pull-left mr-2 doc_icon"> <i class="'+extClass+'"></i> </label>  <label class="pull-left doc_name"> <a target="_blank" href="'+filePath+'">'+filePath+'</a></label></div></div></div>';
						text = text + '<div class="time">' + receiveTime + '</div></div>';

						//data.message='[{"attachment":{"payload":{"src":"'+filePath+'"},"type":"video"}}]';
						data.message=filePath;
						
						//data.message=JSON.parse(data.message);

						$("#conversation").append(text);
						 $(".formBase").mCustomScrollbar("scrollTo","bottom");

						}

						 var CustomerMsg2 = JSON.parse('{"recipient_id":"agent_' + conversationId + '","text":"' + data.message + '","attachment":"'+data.type+'","timeStamp":"' + receiveTime + '"}');
                        chatConversation = "";
                        convMsg = "";
                        chatConversation = localStorage.getItem("ChatConversation");

						if (chatConversation != "" && chatConversation != "undefined" && chatConversation != null && chatConversation != "[]") {
							chatConversation = chatConversation.slice(0, -1);
							convMsg = JSON.stringify(CustomerMsg2);
							chatConversation = chatConversation +","+ convMsg;
							chatConversation = chatConversation + ']';
							localStorage.setItem("ChatConversation",chatConversation);
							  globalchat.ChatConversation = chatConversation;
							
							} else {
							localStorage.setItem("ChatConversation",JSON.stringify(CustomerMsg2));
							  globalchat.ChatConversation = JSON.stringify(CustomerMsg2);
								}
							
							
					  localStorage.setItem(global_ChatName,JSON.stringify(globalchat));
                }); //new msg end
                   
				
            }
        }
        function InsertConversation(msg) {
              $.ajax({
                    type: "GET",
                    url: "https://web.press3.io/TestAgentData.aspx",
                    dataType: "JSON",
                    //async: false,
                              data: {
                                  type: 1, Message: msg, IsAgent: 0,
                                  ConversationId: localStorage.getItem("conversationId"),
                                  ConversationMessageId: localStorage.getItem("ConversationMessageId"),
                                  AgentChannel: localStorage.getItem("AgentChannel")
                    },
                    success: function (res) {
                        console.log(res)
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.log(textStatus);
                    }
                });
        }
        function webSocketSubscription(AgentChannel) {
            //var domain = location.host
            var domain = $("#hdnIp").val();
            var host = (location.protocol === 'https:') ? 'wss://' : 'ws://';
            var page = '/ConferenceWebSocket.sub?Channel_Name=';
            var ws;
            //var hostTotal = "wss://web.press3.io:199/ConferenceWebSocket.sub?Channel_Name=Agent_1517";
            //var hostTotal = "wss://web.press3.io:199/ConferenceWebSocket.sub?Channel_Name=Agent_1517";
            //ws = webSocketRequestBinding.SubscribeWebSocket(hostTotal, 25);//25-->no of retrys,global_agentId--->agentid
            //ws = new WebSocket(hostTotal);
            console.log(hostTotal);
            ws.onopen = function (evt) {
                console.log("WebSocket Connection Opened ");
                if (isAgent == 0) {
                    isSubscribed = 1;
                }
            };
            ws.onmessage = function (evt) {
                console.log("Message " + evt.data);
                var jsonData = "";
                if (typeof (evt.data) != "undefined" || evt.data != "") {
                    jsonData = JSON.parse(evt.data)
                    agentTimer = 40;
                    clearInterval(agentTimer);
                    if (jsonData.IsAgent == "1") {
						nowtime = new Date();
						receiveTime = nowtime.toLocaleTimeString().replace(/([\d]+:[\d]{2})(:[\d]{2})(.*)/, "$1$3");
                        var text = '<div class="speechItem"><div class="clearfix">'
                        text = text + '<img src="' + imgUrl + '" alt="" class="left" />'
                        text = text + '<div class="speechLeft"><p>' + jsonData.Message + '</p></div></div>';
						text = text + '<div class="time">' + receiveTime + '</div></div>';

                        conversationId = localStorage.getItem("conversationId");

                        var CustomerMsg2 = JSON.parse('{"recipient_id":"agent_' + conversationId + '","text":"' + jsonData.Message + '","timeStamp":"' + receiveTime + '"}');
                        chatConversation = "";
                        convMsg = "";
                        chatConversation = localStorage.getItem("ChatConversation");
						if(conversationId == jsonData.ConversationId){
							if (chatConversation != "" && chatConversation != "undefined" && chatConversation != null && chatConversation != "[]") {
							chatConversation = chatConversation.slice(0, -1);
							convMsg = JSON.stringify(CustomerMsg2);
							chatConversation = chatConversation +","+ convMsg;
							chatConversation = chatConversation + ']';
							localStorage.setItem("ChatConversation",chatConversation);
							} else {
							localStorage.setItem("ChatConversation",JSON.stringify(CustomerMsg2));
							}
							updateConversationMessage(jsonData.ConversationMessageId);
							//toSendConversation_Of_aAgent_Customer(jsonData.Message,4);
							$("#conversation").append(text);
							//$("#conversation").stop().animate({ scrollTop: $("#conversation")[0].scrollHeight }, 1000);
                            $(".formBase").mCustomScrollbar("scrollTo", "bottom");
                        }
                        if ($('.iconClose').hasClass('hide')) {
                            msgCount = msgCount + 1;
                            $("#notificationCount").text(msgCount);
                            $(".chat_notify").show();
                        } else {
                            msgCount = 0;
                            $("#notificationCount").text(msgCount);
                            $(".chat_notify").hide();

                        }
                    }
                }
            };
            ws.onerror = function (evt) {
                console.log("Trying again1");
            };
            ws.onclose = function (evt) {
                $("#lblWebsocket").htonclose = function () {
                    console.log("WebSocket Connection Closed  :  " + disconnected);
                };
            }
        }

        function customerWebSocketSubscription() {
            //var domain = location.host
            var domain = $("#hdnIp").val();
            var host = (location.protocol === 'https:') ? 'wss://' : 'ws://';
            var page = '/ConferenceWebSocket.sub?Channel_Name=';

            if (localStorage.getItem("Customer_ChannelName") == null) {
                CustomerChannelName = "Customer_" + uuidv4();
                localStorage.setItem("Customer_ChannelName", CustomerChannelName);
            }
            else {
                CustomerChannelName = localStorage.getItem("Customer_ChannelName");
            }
            var wsCust;
            var hostTotal = "wss://web.press3.io:199/ConferenceWebSocket.sub?Channel_Name=" + CustomerChannelName;
            //var hostTotal = "wss://web.press3.io:199/ConferenceWebSocket.sub?Channel_Name=Agent_1517";
            wsCust = webSocketRequestBinding.SubscribeWebSocket(hostTotal, 25);//25-->no of retrys,global_agentId--->agentid
            //ws = new WebSocket(hostTotal);
            console.log(hostTotal);
            wsCust.onopen = function (evt) {
                console.log("WebSocket Connection Opened ");

            };
            wsCust.onmessage = function (evt) {
                console.log("Message " + evt.data);
                var jsonData = "", AgentName = "";
               // if (typeof (evt.data) != "undefined" || evt.data != "") {
			   wsCust.send("ChatWidget message : " + evt.data);
                    jsonData = JSON.parse(evt.data);
                localStorage.setItem("IsPingAgent", jsonData.Data.IsPingAgent)
                localStorage.setItem("AgentId", jsonData.Data.AgentChannel);
                    var AgentName;
                if (jsonData.Data.AgentName.length > 20) {
                    AgentName = jsonData.Data.AgentName.substring(0, 16) + "...";
                }
                else {
                     AgentName = jsonData.Data.AgentName;
                }


                    $("#custName").text(AgentName);
                    localStorage.setItem("AgentName", AgentName);
               // $("#custName").text(jsonData.Data.AgentName);
                       var msg="You are now connected to "+AgentName
					  						   var name="isAgentconnected_"+jsonData.Data.ConversationId;
					   localStorage.setItem(name,1);
					  // toSendConversation_Of_aAgent_Customer(msg, 4);
					    var jsnMsg='[{"text":"' + msg + '"}]';
					   toSendConversation_Of_aAgent_Customer(jsnMsg, 2);
                       nowtime = new Date();
						receiveTime = nowtime.toLocaleTimeString().replace(/([\d]+:[\d]{2})(:[\d]{2})(.*)/, "$1$3");
                        var text = '<div class="speechItem"><div class="clearfix">'
                        text = text + '<img src="' + imgUrl + '" alt="" class="left" />'
                        text = text + '<div class="speechLeft"><p>' + msg + '</p></div></div>';
						text = text + '<div class="time">' + receiveTime + '</div></div>';

                        conversationId = localStorage.getItem("conversationId");

                        var CustomerMsg2 = JSON.parse('{"recipient_id":"agent_' + conversationId + '","text":"' + msg + '","timeStamp":"' + receiveTime + '"}');
                        chatConversation = "";
                        convMsg = "";
                        chatConversation = localStorage.getItem("ChatConversation");

							if (chatConversation != "" && chatConversation != "undefined" && chatConversation != null && chatConversation != "[]") {
							chatConversation = chatConversation.slice(0, -1);
							convMsg = JSON.stringify(CustomerMsg2);
							chatConversation = chatConversation +","+ convMsg;
							chatConversation = chatConversation + ']';
							localStorage.setItem("ChatConversation",chatConversation);
							} else {
							localStorage.setItem("ChatConversation",JSON.stringify(CustomerMsg2));
							}
							$("#conversation").append(text);
							//$("#conversation").stop().animate({ scrollTop: $("#conversation")[0].scrollHeight }, 1000);
                            $(".formBase").mCustomScrollbar("scrollTo", "bottom");
							$(".typeArea").show();

					 chatcloser =0;
						  custChatCloserTimer = 0;
						  localStorage.setItem("chattimer",chatcloser);
					customerChatCloserTimer(conversationId)
					
                    var token = getToken();
                    if (jsonData.Data.IsPingAgent == true) {
                        var pingAgentMobile=jsonData.Data.AgentMobile;
                        GetPingUserId(pingAgentMobile);
                    }
                    else {
                        var agentChannel="Hub_"+jsonData.Data.AgentChannel
                          localStorage.setItem("pingAgentId",agentChannel );
                    }
                    PingConversation();
                    SubscribeToSocket();
					
			  conversationId = localStorage.getItem("conversationId");
                var agentId = localStorage.getItem("pingAgentId");
               var IsPingAgent = localStorage.getItem("IsPingAgent");
			   var fromId = localStorage.getItem("userId");
			   
				var cust_jsonObj;
                    if (IsPingAgent == "true") {
                        cust_jsonObj = { "conversationId": conversationId, "from": conversationId, "to": agentId, "messageType": "0", "message": "Customer OnBoard" };
                    } else {
						var newData={"fromName" : localStorage.getItem("callerName")}// ,"fromMobile":localStorage.getItem("callerMobile")}
                         cust_jsonObj = { "conversationId": conversationId, "from": fromId, "to": agentId, "messageType": "0", "message": "Customer OnBoard",
						 "data":newData };
                         //cust_jsonObj = { "conversationId": conversationId, "from": fromId, "to": agentId, "messageType": "0", "message": "Customer OnBoard" };
                    }
					   customerSocket.emit('newMessage', cust_jsonObj, function (data) { console.log(data); });
					   
					   var customerDetails="";
					var details=JSON.parse(localStorage.getItem("callerDetails"));
					if(details != null){
					if(details.hasOwnProperty("Email"))
					  customerDetails="Name:"+localStorage.getItem("callerName")+",Mobile:"+localStorage.getItem("callerMobile")+",Email:"+details.Email+",Website:"+document.referrer;
					else
					 customerDetails="Name:"+localStorage.getItem("callerName")+",Mobile:"+localStorage.getItem("callerMobile")+",Website:"+document.referrer;
					console.log(customerDetails);
					
					 if (IsPingAgent == "true") {
                        cust_jsonObj = { "conversationId": conversationId, "from": conversationId, "to": agentId, "messageType": "0", "message": customerDetails };
                    } else {
					  if(customerDetails.includes("Name:"))
						customerDetails = customerDetails.replace(/,/g, '<br>');
                         cust_jsonObj = { "conversationId": conversationId, "from": fromId, "to": agentId, "messageType": "0", "message": customerDetails };
                    }
					 customerSocket.emit('newMessage', cust_jsonObj, function (data) { console.log(data); });
					  
					  toSendConversation_Of_aAgent_Customer(customerDetails, 3);
					  }



             //   }
            };
            wsCust.onerror = function (evt) {
			 customerWebSocketSubscription();
                console.log("Trying again1");
            };
            wsCust.onclose = function (evt) {
				 customerWebSocketSubscription();
                console.log("CustomerWebSocket Connection Closed  :  ");

            }
        }
        function uuidv4() {
          return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>
            (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)
          );
        }

        function toSendConversation_Of_aAgent_Customer(agentMsg,MsgTypeId) {
            var g=@x;
            var WidgetId =@data.WidgetId;
            var AccountId =@data.AccountId;
            //var url = "http://hubchat.com";
            var url ="https://hub-chat.telebu.com";
            var imgUrl = url + "/StaticFiles/images/Sender-sm.png";
            is_endreason = localStorage.getItem("isEndReason");
			conversationId = localStorage.getItem("conversationId");
			if(agentMsg.includes("You are now connected") || agentMsg.includes("Thank you for contacting us") ||  agentMsg.includes("Name:"))
				is_endreason="1";
				
            var url2 = url + "/accounts/" + AccountId + "/widgets/" + WidgetId + "/conversations/" + conversationId + "/"+is_endreason+"/replies/";

            var Data2 = JSON.stringify({
                "MessageTypeId": MsgTypeId,
                "Message": agentMsg
               //  localStorage.getItem("userId")
            });
            $.ajax({
                type: "POST",
                url: url2,
                dataType: "JSON",
                contentType: "application/json",
                async: false,
                data: Data2,
                success: function (res) {
                    console.log("Inserted successfully.");
                    console.log(res.Id)
                    if (res.Id != null) {
                        localStorage.setItem("ConversationMessageId", res.Id);
                    }
            //          conversationId = localStorage.getItem("conversationId");

            //var CustomerMsg1 = JSON.parse('{"recipient_id":"agent_' + conversationId + '","text":"' + agentMsg + '"}');
            //chatConversation = "";
            //convMsg = "";
            //chatConversation = localStorage.getItem("ChatConversation");
            //if (chatConversation != "" && chatConversation != "undefined" && chatConversation != null && chatConversation != "[]") {
            //            chatConversation = chatConversation.slice(0, -1);
            //            convMsg = JSON.stringify(CustomerMsg1);
            //            chatConversation = chatConversation +","+ convMsg;
            //            chatConversation = chatConversation + ']';
            //            localStorage.setItem("ChatConversation",chatConversation);
            //        } else {
            //            localStorage.setItem("ChatConversation",JSON.stringify(CustomerMsg1));
            //        }

                     },
                error: function (jqXHR, textStatus, errorThrown) {
                   // alert(textStatus);
				    console.log(textStatus);
                }
            });


        }
       function GetAgentsForHubchat(convId) {
           var WidgetId =@data.WidgetId;
           var AccountId =@data.AccountId;
           var url = "https://hub-chat.telebu.com";
		   conversationId= localStorage.getItem("conversationId")
			if(conversationId == null || conversationId == undefined)
				conversationId=convId;
           var url2 = url + "/accounts/" + AccountId + "/widgets/" + WidgetId + "/conversations/" + conversationId + "/customerchannel/" + localStorage.getItem("Customer_ChannelName") + "/action/NEWCHAT"
           var f_isPing = 0;
           $.ajax({
                    url: url2,
                    type: 'POST',
                    data: {},
                    dataType: 'JSON',
                    success: function(result) {
                        console.log(result);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.log(errorThrown);
						console.log(textStatus);
                    }
                });
           return f_isPing;
        }
         function UpdateAgentsForHubchat(status, agentId) {
           //  var postURL = "http://localhost:64811/InsertAgents.aspx";
            var postURL = "https://web.press3.com/InsertAgents.aspx";

            $.ajax({
                type: "GET",
				url:postURL ,
				dataType: "JSON",
				async: false,
				data: { type: 1 ,AgentId:agentId,Status:status},
                success: function (res) {
                    console.log(res);

                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log(errorThrown);
                    console.log(textStatus);
                }
            });
        }

         function updateConversationMessage(conversationMessageId) {
                var g=@x;
            var WidgetId =@data.WidgetId;
            var AccountId =@data.AccountId;
           // var url = "http://hubchat.com";
             var url ="https://hub-chat.telebu.com";
            var imgUrl = url + "/StaticFiles/images/Sender-sm.png";
             is_endreason = localStorage.getItem("isEndReason");
            // conversationMessageId = 501;
             conversationId = localStorage.getItem("conversationId");
            var url2 = url + "/accounts/" + AccountId + "/widgets/" + WidgetId + "/conversations/" + conversationId + "/"+conversationMessageId+"/UpdateStatusOfMsg/";
         //  http://hubchat.com/accounts/1/widgets/1/Conversations/2/420/UpdateStatusOfMsg

            $.ajax({
                type: "POST",
                url: url2,
                dataType: "JSON",
                contentType: "application/json",
                async: false,
                data: "",
                success: function (res) {
                    console.log("Inserted successfully.");


                     },
                error: function (jqXHR, textStatus, errorThrown) {
                    //alert(textStatus);
					 console.log(textStatus);
                }
            });


        }
        function isEmail(Email) {
            return true;

        }
        function InsertCustomerInformation(AccountId, callerName, callerMobile, details) {
            // GetConversationMessages(190); "http://qa.press3.com/TestAgentData.aspx"
              $.ajax({
        type: "GET",
        url: "https://web.press3.io/TestAgentData.aspx",
        dataType: "JSON",
        //async: false,
                  data: {
                      type: 2, AccountId: AccountId, Name: callerName,Mobile: callerMobile,Details: details
        },
        success: function (res) {
            console.log(res);
			InsertCustomerIpInfo(res.customerId);
            //GetConversationMessages(res.customerId);
            var CName = res.customerName;

           localStorage.setItem("ActualCustomerName", res.customerName);
            if (CName.length > 20) {
                CName = CName.substring(0,16)+"...";
            }
            localStorage.setItem("customerId", res.customerId);
            localStorage.setItem("customerName",  res.customerName);
            localStorage.setItem("IsCustomerExists", res.IsExist);

            if (localStorage.getItem("TimeToDisplayWelcomeFrom") == "At the start of the conversation") {
                if (res.IsExist == "0") {
                 loadChatWidget();
                 UpdateCustomerId(res.customerId);
                } else if (res.IsExist == "1") {
                    $("#custName").text(localStorage.getItem("ActualCustomerName"));
                $("#chatWindow").addClass("hide");
                  GetConversationMessages("1");
                if (localStorage.getItem("NoPreviewsData") != "1") {
                     $("#chatWindow").addClass("hide");
                    $("#ExistingUser").show();
                } else {
                    $("#chatWindow").removeClass("hide");
                    loadChatWidget();
                    UpdateCustomerId(localStorage.getItem("customerId"));
                }
            } else if (localStorage.getItem("TimeToDisplayWelcomeFrom") == "Before connecting to an agent") {
                    ///here we need patch with Agent
                    if (res.IsExist == "0") {
                        UpdateCustomerId(res.customerId);
                    } else if (res.IsExist == "1") {
                        //load old conversation messages
                    }
            } else if (localStorage.getItem("TimeToDisplayWelcomeFrom") == "After agent is connected") {

            }





            }

        },
        error: function (jqXHR, textStatus, errorThrown) {
            console.log(textStatus);
        }
    });
        }

        function customerTimer() {
            var imgUrl = url + "/StaticFiles/images/BotIcon.png";
            var MaxWaitTimer = localStorage.getItem("MaxWaitTimeToAgent");
            agentTimer = 1;
            custTimer = setInterval(function () {
                agentTimer++;
                if (agentTimer == MaxWaitTimer && isSocketSubscribed == 0 && isSubscribed == 0) {
  		nowtime = new Date();
                    sentTime = nowtime.toLocaleTimeString().replace(/([\d]+:[\d]{2})(:[\d]{2})(.*)/, "$1$3");
                    $("#conversation").append('<div class="speechItem"><div class="clearfix"><img src="' + imgUrl + '" alt="" class="left"><div class="speechLeft"><p>' + localStorage.getItem("CustomerWaitTimeforAgentConnect") + '</p></div></div><div class="time">' + sentTime + '</div>');
                    $(".formBase").mCustomScrollbar("scrollTo", "bottom");

                    clearInterval(custTimer);
                    custTimer = 0;
                    EndCustomerChat();
                    //$(".startOver").children().attr("ActualConversationId", ActualConversationId);
					localStorage.setItem("Startoverenabled", "true");
                    $(".startOver").show();
                    $(".typeArea").hide();
                    localStorage.setItem("IsCustomerExists", 1);
                    $("#customerAllChats").trigger("click");
                }
                else if (agentTimer > MaxWaitTimer) {
                    clearInterval(custTimer);
                    custTimer = 0;
                } 

            }, 1000);

        }
        function EndCustomerChat() {
            var WidgetId =@data.WidgetId;
           var AccountId =@data.AccountId;
            var url = "https://hub-chat.telebu.com";
            var url2 = url + "/accounts/" + AccountId + "/widgets/" + WidgetId + "/conversations/" + localStorage.getItem("conversationId") + "/customerchannel/" + localStorage.getItem("Customer_ChannelName") + "/action/REMOVECHAT"
            $.ajax({
                url: url2,
                type: 'POST',
                data: {},
                    dataType: 'JSON',
                    success: function(result) {
                        console.log(result);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.log(errorThrown);
						console.log(textStatus);
                    }
                });
        }

        function UpdateCustomerId(customerId) {
                var g=@x;
            var WidgetId =@data.WidgetId;
            var AccountId =@data.AccountId;
            //var url = "http://hubchat.com";
             var url ="https://hub-chat.telebu.com";
            var imgUrl = url + "/StaticFiles/images/Sender-sm.png";
             conversationId = localStorage.getItem("conversationId");
            var url2 = url + "/accounts/" + AccountId + "/widgets/" + WidgetId + "/conversations/" + conversationId + "/"+customerId+"/UpdateCustomerId/";
         //  http://hubchat.com/accounts/1/widgets/1/Conversations/2/420/UpdateStatusOfMsg

            $.ajax({
                type: "POST",
                url: url2,
                dataType: "JSON",
                contentType: "application/json",
                async: false,
                data: "",
                success: function (res) {
                    console.log("Inserted successfully.");


                     },
                error: function (jqXHR, textStatus, errorThrown) {
                   // alert(textStatus);
				    console.log(textStatus);
                }
            });



        }

        function GetConversationMessages(chats) {
            //var customerId = 190;
            //var customerName = "raja";

            var customerId = localStorage.getItem("customerId");
            var customerName = localStorage.getItem("ActualCustomerName");
                var g=@x;
            var WidgetId =@data.WidgetId;
            var AccountId =@data.AccountId;
            //var url = "http://hubchat.com";
             var url ="https://hub-chat.telebu.com";
            var imgUrl = url + "/StaticFiles/images/Sender-sm.png";
             conversationId = localStorage.getItem("conversationId");
            var url2 = url + "/accounts/" + AccountId + "/widgets/" + WidgetId + "/conversations/"+customerId+"/GetConversationsOfCustomer/";
         //  http://hubchat.com/accounts/1/widgets/1/Conversations/2/420/UpdateStatusOfMsg

            $.ajax({
                type: "GET",
                url: url2,
                dataType: "JSON",
                contentType: "application/json",
                async: false,
                data: "",
                success: function (res) {
                    if (res.length > 0) {
                        localStorage.setItem("OldConversationChat", "")
                        localStorage.setItem("OldConversationChat", JSON.stringify(res));

                        if (chats == "1") {
                            $("#CusOldConversations").html("");
                        } else {
                            $("#allConversations").html("");
                        }
                        for (var n = res.length - 1; n >= 0; n--) {
                            var chatBox = "";
                            var lastMessage = "";
                            var lastTime = "";
                            var lastMessageTypeId = 0;
                            for (q = res[n].ConversationMessages.length - 1; q >= 0; q--) {
                                lastMessage = res[n].ConversationMessages[q].Message
								if(lastMessage == "EndChat from Customer" || lastMessage.includes("Name:")){
									 lastMessage = res[n].ConversationMessages[q-1].Message;
									   lastMessageTypeId = res[n].ConversationMessages[q-1].MessageTypeId;
                                lastTime = new Date(res[n].ConversationMessages[q-1].CreatedTimeUTC.replace('T', ' ') + 'Z');
									 }
									 else
								{
									 lastMessage = res[n].ConversationMessages[q].Message;
									  lastMessageTypeId = res[n].ConversationMessages[q].MessageTypeId;
									lastTime = new Date(res[n].ConversationMessages[q].CreatedTimeUTC.replace('T', ' ') + 'Z');
									 try{
									 //lastMessage = JSON.parse(lastMessage);
									// if((lastMessageTypeId == 3 || lastMessageTypeId ==4) && typeof(lastMessage) == "object")
									  if((lastMessageTypeId == 3 || lastMessageTypeId ==4))// && typeof(lastMessage) == "object")
									 {
										lastMessage = JSON.parse(lastMessage);
										if(typeof(lastMessage) == "object"){
											 if (lastMessage[0].hasOwnProperty("attachment")) {
												lastMessage = lastMessage[0].attachment.payload.src;
											 }
											 else{
												var lmsg=lastMessage[0].custom[0].payload;
												if(lmsg == "image" || lmsg ==  "excel" || lmsg == "pdf" )
													lastMessage=lastMessage[0].custom[0].text;
											 }
										}
									 
									 }//if
									}
										catch(e){}
                               
								}
                                break;
                            }

                            if (lastMessageTypeId == 2) {
                                lastMessage = JSON.parse(lastMessage);
                                for (var o = 0; o < lastMessage.length; o++) {
                                    if (lastMessage[o].text != undefined)
                                        lastMessage = lastMessage[o].text;

                                    if (lastMessage[o].custom == undefined) { }
                                    else if (lastMessage[o].custom[0].text != "" && lastMessage[o].custom[0].text != null && lastMessage[o].custom[0].text != undefined) {
                                        lastMessage = lastMessage[o].custom[0].text;
                                    }
                                }
                            }
                            // console.log(lastMessage);
                            // console.log(lastTime);

                            // var r = 0;
                            //r = n+1;
                            // customerName = customerName + ' ' +r;
                            chatBox += '<a conversationId = "' + res[n].ConversationId + '" AssignedAgent = "' + res[n].AssignedAgent + '" class="chatBoxlist" ><div class="chat_box clearfix">';
                            chatBox += '<div class="use_dp">';
                            chatBox += '<img src="https://hub-chat.telebu.com/StaticFiles/images/user_default.png" alt="profile" />';
                            chatBox += '</div>';
                            chatBox += '<div class="chat_cont">';
                            //chatBox += '<h5>' + customerName.substring(0, 20) + '</h5>';
							chatBox += '<h5>' + res[n].AssignedAgent + '</h5>';
                           if (lastMessage.length > 0) {
								try{
                                chatBox += '<p>' + lastMessage.substring(0, 30) + '</p>';
								}
								catch(ex){
									  chatBox += '<p>' + lastMessage + '</p>';}
                            }
                            chatBox += '</div>';
                            chatBox += '<div class="details">' + GetReadableTimeDiff(lastTime) + '</div>';
                            chatBox += '</div></a>';
                            if (chats == "1") {
                                if (res.length >= 3) {
                                    if (n > res.length - 3)
                                        $("#CusOldConversations").append(chatBox);
                                } else {
                                    $("#CusOldConversations").append(chatBox);
                                }

                            } else {
                                $("#allConversations").append(chatBox);
                            }



                        }
                        localStorage.setItem("NoPreviewsData","0");
                    } else {
                        console.log("no data found");
                        localStorage.setItem("NoPreviewsData","1");
                    }

                     },
                error: function (jqXHR, textStatus, errorThrown) {
                   // alert(textStatus);
				    console.log(textStatus);
                }
            });


        }
        $(document).delegate("#customerAllChats", "click", function () {
            if (localStorage.getItem("IsCustomerExists") == "0") {
              //  return false;
                if (localStorage.getItem("TimeToDisplayWelcomeFrom") == "At the start of the conversation") {
                   $("#chatWindow").addClass("hide");
                    GetConversationMessages("0");
                   $("#AllChats").show();
                } else {
                    return false;
               }
                
            } else {
                $("#chatWindow").addClass("hide");
               GetConversationMessages("0");
	                $("#AllChats").show();
            }

        });


        $(document).delegate("#back", "click", function () {
            if (localStorage.getItem("conversationId") == 0 || localStorage.getItem("conversationId") == null || localStorage.getItem("conversationId") == "undefined") {
                if (localStorage.getItem("NoPreviewsData") == "0") {
                   // funGetWidget(widgetUUID);
                    //GetConversationMessages("1");
                    $("#AllChats").hide();
                    $("#ExistingUser").show();
                    return false;
                }
            } else {
                $("#AllChats").hide();
                $("#chatWindow").removeClass("hide");
                $(".formBase").mCustomScrollbar("scrollTo", "bottom");
            }
        });

        $(document).delegate("#CusAllChats", "click", function () {
            $("#ExistingUser").hide();
            $("#chatWindow").addClass("hide");
            GetConversationMessages("0");
	        $("#AllChats").show();
        });
        $(document).delegate("#CusNewChat", "click", function () {
            endchat = "";
            localStorage.setItem("isEndReason", 0);
            $(".startOver").hide();
           // $(".typeArea").show();
            $("#conversation").html("");
            $("#ExistingUser").hide();
            loadChatWidget();
            UpdateCustomerId(localStorage.getItem("customerId"));
			localStorage.setItem("Startoverenabled","false");
			localStorage.setItem("oldStartoverenabled","true");

        });

        $(document).delegate("#startNewConversation", "click", function () {
			var oldStrtovr=localStorage.getItem("oldStartoverenabled");
			var name="isAgentconnected_"+localStorage.getItem("conversationId");
			if(oldStrtovr == null || oldStrtovr == undefined){
				localStorage.setItem("oldStartoverenabled","true");
				oldStrtovr=localStorage.getItem("oldStartoverenabled");
				}
				if(localStorage.getItem("Startoverenabled") == null || localStorage.getItem("Startoverenabled") == undefined){
								localStorage.setItem("Startoverenabled","false");
				}
               if ((oldStrtovr == "true" || oldStrtovr == "false") && localStorage.getItem("Startoverenabled") == "false" )
			  // && $(this).attr("ActualConversationId") != localStorage.getItem("conversationId"))
            {
			if(localStorage.getItem("isEndReason")== "0" &&(localStorage.getItem(name)== "0" ||localStorage.getItem(name) == null || localStorage.getItem(name) == undefined )){
			conversationId=localStorage.getItem("conversationId");
			if(conversationId != null || conversationId != undefined){
			UpdateTocloseChat(1,conversationId);
			localStorage.setItem("Startoverenabled","true");}
			}
			else{
				$("#strtOverText").show();
                setTimeout(function () {
                   $("#strtOverText").hide();
             },3000);
			 return false;
			 }
            }

            endchat = "";
            localStorage.setItem("isEndReason", 0);
			if(localStorage.getItem("Startoverenabled") == null || localStorage.getItem("Startoverenabled") == undefined)
			{
			localStorage.setItem("oldStartoverenabled","true");
			}
			else{localStorage.setItem("oldStartoverenabled",localStorage.getItem("Startoverenabled"));}
			localStorage.setItem("Startoverenabled","false")
             $(".startOver").hide();
           // $(".typeArea").show();
             $("#conversation").html("");
            $("#AllChats").hide();
            loadChatWidget();
            UpdateCustomerId(localStorage.getItem("customerId"));

        });
        $(document).delegate("#startOverBtn", "click", function () {
            	var oldStrtovr=localStorage.getItem("oldStartoverenabled");
		var name="isAgentconnected_"+localStorage.getItem("conversationId");
		if(oldStrtovr == null || oldStrtovr == undefined)
				localStorage.setItem("oldStartoverenabled","true");
               if (oldStrtovr == "true" && localStorage.getItem("Startoverenabled") == "false"
			&& $(this).attr("ActualConversationId") != localStorage.getItem("conversationId"))
            {
				if(localStorage.getItem("isEndReason")== "0" && (localStorage.getItem(name)== "0" ||localStorage.getItem(name) == null || localStorage.getItem(name) == undefined )){
			conversationId=localStorage.getItem("conversationId");
			UpdateTocloseChat(1,conversationId);
			localStorage.setItem("Startoverenabled","true");
			}
			else{
				 $(".poweredBy").html("You can't startover another conversation as there is an active conversation");
				   $(".poweredBy").css("color","red");
                setTimeout(function () {
					 $(".poweredBy").html("Powered by Telebu");
					   $(".poweredBy").css("color","#c6cfd6");
             },3000);
			 return false;
			 }
            }
			localStorage.setItem("Startoverenabled", "false");
            localStorage.setItem("OldConversationIdActive", $(this).attr("ActualConversationId"));
            localStorage.setItem("OldConversationIdActivetrue", "1");
            localStorage.setItem("conversationId", $(this).attr("ActualConversationId"));
         //   UpdateTocloseChat(0, $(this).attr("ActualConversationId"));
			if(localStorage.getItem("conversationId") == localStorage.getItem("OldConversationIdActive") && localStorage.getItem("OldChatConversationId") == "" )
			{
			  localStorage.setItem("oldIsEndReason", 1);
			}
            if (localStorage.getItem("oldIsEndReason") == "0") {
				UpdateTocloseChat(0, $(this).attr("ActualConversationId"));
                localStorage.setItem("IsUsed", 1);
                $(".btnSubmit-sm").removeAttr("disabled");
                $(".btnSubmit-sm").removeAttr("style");
                $(".startOver").hide();
                $(".typeArea").hide();
            } else if (localStorage.getItem("oldIsEndReason") == "1" ){//&& localStorage.getItem("OldChatConversationId")== "") 
				
				getConversationEndchat( $(this).attr("ActualConversationId"))
				  UpdateTocloseChat(0, $(this).attr("ActualConversationId"));
                $(".typeArea").attr("ConversationId", $(this).attr("ActualConversationId"));
				 if(global_BotFlowCompleted == 1){
				
                $(".startOver").hide();
               // $(".typeArea").show();
                GetAgentsForHubchat($(this).attr("ActualConversationId"));
				endchat = "Endchat";
				}
				else{
					 $(".startOver").hide();
					 $(".typeArea").hide();
				
				}
            }
			// else if (localStorage.getItem("oldIsEndReason") == "1" && localStorage.getItem("OldChatConversationId")!= "") {
			 // $(".poweredBy").html("You cant startover another conversation");
			//	   $(".poweredBy").css("color","red");
            //    setTimeout(function () {
			//		 $(".poweredBy").html("Powered by Telebu");
			//		   $(".poweredBy").css("color","#c6cfd6");
           //  },3000);
			// return false;
			// }
			else{
					getConversationEndchat( $(this).attr("ActualConversationId"))
					$(".typeArea").attr("ConversationId", $(this).attr("ActualConversationId"));
					 UpdateTocloseChat(0, $(this).attr("ActualConversationId"));
					  if(global_BotFlowCompleted == 1){
						$(".startOver").hide();
					  //  $(".typeArea").show();
						GetAgentsForHubchat($(this).attr("ActualConversationId"));
						msgIds=[];
						endchat = "Endchat";
						}
						else{
							 $(".startOver").hide();
							 $(".typeArea").hide();
						
						}
			}


        });


        $(document).delegate(".chatBoxlist", "click", function () {
            var currentConversationId = $(this).attr("conversationId");
			var conEndchat=getConversationEndchat(currentConversationId);
			var AssignedAgent= $(this).attr("AssignedAgent");
            var OldConversationChat = {};
            var ActualConversationId = "";
            var isEndChatCon = 0;
			var CId = localStorage.getItem("conversationId");
            localStorage.setItem("oldIsEndReason", 0);
            OldConversationChat = JSON.parse(localStorage.getItem("OldConversationChat"));
            if (OldConversationChat.length > 0) {
                for (var r = OldConversationChat.length - 1; r >= 0; r--) {
                    if (OldConversationChat[r].ConversationId == currentConversationId) {
                        {
                            ActualConversationId = OldConversationChat[r].ConversationId
                            $("#conversation").html("");
                            for (var j = 0; j < OldConversationChat[r].ConversationMessages.length; j++) {
                                var reopenOldConversation = JSON.stringify(OldConversationChat[r].ConversationMessages)
                                var retValue2 = OldConversationChat[r].ConversationMessages[j].Message;
                                var messageTypeId = OldConversationChat[r].ConversationMessages[j].MessageTypeId;
                                //console.log(retValue2)
                                var resMsg2 = OldConversationChat[r].ConversationMessages[j].Message;
                                var msgTime2 = new Date(OldConversationChat[r].ConversationMessages[j].CreatedTimeUTC.replace('T', ' ') + 'Z');
                                
                                var CurrTime = new Date();
                                //console.log(msgTime2.getFullYear());
                                if ((msgTime2.getFullYear() == CurrTime.getFullYear()) && (msgTime2.getMonth() == CurrTime.getMonth()) && (msgTime2.getDay() == CurrTime.getDay())) {
                                    msgTime2 = msgTime2.toLocaleTimeString().replace(/([\d]+:[\d]{2})(:[\d]{2})(.*)/, "$1$3");
                                } else {
                                    msgTime2 = msgTime2.toLocaleString();
                                }
                                // new Date(res.ConversationMessages[i].CreatedTimeUTC.replace('T', ' ') + 'Z');
                                // var recipient_id2 = retValue2.recipient_id;
                                butt = "";

								 if (messageTypeId == 2)
								{
                                  imgUrl = "https://hub-chat.telebu.com/StaticFiles/images/BotIcon.png";
                                    resMsg2 = JSON.parse(resMsg2);
                                    for (var o = 0; o < resMsg2.length; o++) {
                                        try {
                                            if (resMsg2[o].buttons == undefined) { }
                                            else {
                                                if (resMsg2[o].buttons.length > 0) {
                                                    butt = "";
                                                    butt = '<div class="mt-2">';
                                                    for (var i = 0; i < resMsg2[o].buttons.length; i++) {
                                                        if (resMsg2[o].buttons[i].payload == "submit") {
                                                            butt = butt + '<hr class="mt-2 mb-3 chat-hr">'
                                                            butt = butt + '<div class="center"><button type="button" question="' + resMsg2[o].text +'" onclick="submitAction(this)" value="Submit" class="btnSubmit small mr-2 mb-2 " disabled="disabled" style="cursor:not-allowed">Submit</button></div>'
                                                        }
                                                        else
                                                            butt = butt + '<button type="button" action="submit" onclick="btnAction(this)" value="' + resMsg2[o].buttons[i].title + '" class="btnSubmit-sm mr-2 mb-2 " disabled="disabled" style="cursor:not-allowed">' + resMsg2[o].buttons[i].title + '</button>';
                                                    }
                                                    butt = butt + '</div>';
                                                }
                                            }
                                        }
                                        catch (e) { console.log(e); }

                                        var conversation = '<div class="speechItem"><div class="clearfix"><img src="' + imgUrl + '" alt="" class="left"/><div class="speechLeft">';
                                        conversation = conversation + '<p>' + resMsg2[o].text + '</p>' + butt + '</div> </div><div class="time">' + msgTime2 + '</div>';
                                        if(resMsg2[o].text !=undefined )
                                        $("#conversation").append(conversation);
											 if (resMsg2[o].hasOwnProperty("attachment")) {
										 if (resMsg2[o].attachment.type == "video") {
											var video_url = resMsg2[o].attachment.payload.src;

											var text1 = '<div class="video-container"> <iframe src="' + video_url + '" frameborder="0" allowfullscreen></iframe> </div>'

											$("#conversation").append(text1);
                                             $(".formBase").mCustomScrollbar("scrollTo","bottom");
											 }
											 }
                                        if (resMsg2[o].custom == undefined){}
										else if(resMsg2[o].custom[0].payload == "image")
										{
											var grptlk=resMsg2[o].custom[0].text;
											var text1 = '<div class="speechItem"><div class="clearfix"><img src="' + imgUrl + '" alt="" class="left"><div class="speechLeft">';
											//text1 = text1 + '<a href=grptlk><img width="20%" height="20%" src="' + grptlk+ '" alt="" ><a></div></div>';
											text1 = text1 + '<a href="'+grptlk+'" target="_blank">'+grptlk+'<a></div></div>';
											$("#conversation").append(text1);
                                            $(".formBase").mCustomScrollbar("scrollTo","bottom");
										}
                                        else if (resMsg2[o].custom[0].text != "" && resMsg2[o].custom[0].text != null && resMsg2[o].custom[0].text != undefined && resMsg2[o].custom[0].text != "https://i.ibb.co/34D8SNY/grptalk.jpg") {
                                            if (ActualConversationId == CId) {
                                                endchat = "TalkingToAgent";
                                                localStorage.setItem("isEndReason", 1);
												
												globalchat.isEndReason = 1;
												localStorage.setItem(global_ChatName,JSON.stringify(globalchat));
												
                                                //customerWebSocketSubscription();
                                                isEndChatCon = 1;
                                            }
											else if (ActualConversationId != CId) {
                                                localStorage.setItem("oldIsEndReason",1);
												globalchat.oldIsEndReason = 1;
												localStorage.setItem(global_ChatName,JSON.stringify(globalchat));
												 endchat = "TalkingToAgent";
												  isEndChatCon = 1;
                                            }
                                            var conversation = '<div class="speechItem"><div class="clearfix"><img src="' + imgUrl + '" alt="" class="left"/><div class="speechLeft">';
                                            conversation = conversation + '<p>' + resMsg2[o].custom[0].text + '</p>' + butt + '</div></div><div class="time">' + msgTime2 + '</div>';
                                            $("#conversation").append(conversation);
                                        }
										
										else if(resMsg2[o].custom[0].payload == "Form_Field" &&  localStorage.getItem("isEndReason") == "0") // conEndchat == 0)
										{
											var text1 = '<div class="center"><label class="text-danger f12 lblEditErrorMsg1"></label>';
											text1 =text1+'<input fieldtype="TextBox" id="frmfield"  placeholder="enter email or mobile" autocomplete="off" maxlength="50" class="text-box field EmailField txtRequired ">';
											text1 = text1 + '<button class="btnSubmit" id="Submit1">Submit</button></div>';

											 $("#conversation").append(text1);
											  $(".formBase").mCustomScrollbar("scrollTo","bottom");
											
										}

                                    }

                                }
								else if (messageTypeId == 1 && resMsg2 != "success" && resMsg2 != "hi")
								{
                                    if (resMsg2 == "/affirm{\"group\":\"Yes\"}"){
                                           resMsg2 = "Yes";
                                    }
                                    else if (resMsg2 == "/deny{\"group\":\"No\"}") {
                                         resMsg2 = "No";
                                    }
                                    if (resMsg2 == "Yes" || resMsg2 == "No")
									{
                                        $(".formBase").find('button[value="' + resMsg2 + '"]').last().addClass("select");
                                        $(".formBase").find('button[value="' + resMsg2 + '"]').attr("disabled","disabled");
                                        $(".formBase").find('button[value="' + resMsg2 + '"]').css("cursor","");

									}
                                    else
                                    {
                                        var resmsg2Arr = resMsg2.split(',');
                                        if (resmsg2Arr.length > 1)
                                        {
                                            for (var z = 0; z < resmsg2Arr.length; z++) {
                                                $(".formBase").find('button[value="' + resmsg2Arr[z] + '"]').addClass("select");
                                            }
                                        }
                                        else
                                            $(".formBase").find('button[value="' + resMsg2 + '"]').addClass("select");
                                    }
                                    var text = '<div class="speechItem right"><div class="speechRight">';
                                        text = text + '<p>' + msg + '</p></div>';
			                            text = text + '<div class="time">' + sentTime + '</div></div>';

                                    var conversation = '<div class="speechItem right"><div class="speechRight">';
                                    conversation = conversation + '<p>' + resMsg2 + '</p></div>';
                                    conversation = conversation + '<div class="time">' + msgTime2 + '</div></div>';
                                    $("#conversation").append(conversation);
                                }
                                else if (messageTypeId == 3 && resMsg2 != "EndChat from Customer") {
								
								  try{
								  resMsg2 = JSON.parse(resMsg2);
								  }
								  catch(e){}
								  
								
									
									try{
									
										if(!resMsg2.includes("Name:") && typeof(resMsg2) != "object"){                                    
								   isEndChatCon = 1;
                                    var conversation = '<div class="speechItem right"><div class="speechRight">';
                                    conversation = conversation + '<p>' + resMsg2 + '</p></div>';
                                    conversation = conversation + '<div class="time">' + msgTime2 + '</div></div>';
                                    $("#conversation").append(conversation);}
									
										
								 if (resMsg2[0].hasOwnProperty("attachment")) {
										 if (resMsg2[0].attachment.type == "video") {
											var video_url = resMsg2[0].attachment.payload.src;
										var text = "";
										text = text + '<div class="speechItem"><div class="clearfix">';
										text = text + '<img src="Images/Sender-sm.png" alt="" class="left mCS_img_loaded"/>';
										  text = text + '<iframe class="thumb_attach" src="'+ video_url +'" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="" style="pointer-events:auto;"></iframe>';
										text = text + '<div class="time">' + sentTime + '</div>';

											$("#conversation").append(text);
                                            // $(".formBase").mCustomScrollbar("scrollTo","bottom");
											 }
											 }
											 
								 // resMsg2 = JSON.parse(resMsg2);
								 else if(resMsg2[0].custom[0].payload == "image"){
									var filePath =resMsg2[0].custom[0].text;
									  var text = "";
						
									var text = '<div class="speechItem right"><div class="speechRight">';
									text = text + ' <a target="_blank" href="'+filePath+'"><img src="' + filePath + '" class="thumb_attach mCS_img_loaded" width="100"></a></div> ';
									text = text + '<div class="time">' + msgTime2 + '</div></div>';
									$("#conversation").append(text);
									// $(".formBase").mCustomScrollbar("scrollTo","bottom");
									 
									// return false;
									
									}
									else if(resMsg2[0].custom[0].payload == "excel" || resMsg2[0].custom[0].payload == "pdf")
									{
									var filePath =resMsg2[0].custom[0].text;
									  var text = "",extClass="",extnsn="";
									  
									  var regExp = /(?:\.([^.]+))?$/;
										extnsn = regExp.exec(filePath)[1];
										extnsn=extnsn.toLowerCase();
						
									if(extnsn == "pdf"|| extnsn == "docx")
										extClass="far fa-file-pdf fa-2x";
									else if(extnsn == "xls" || extnsn == "xlsx"||  extnsn == "csv" )
										extClass="far fa-file-excel fa-2x";
								 
									 var text = '<div class="speechItem right"><div class="speechRight">';
									text = text + ' <div class="clearfix p-1 doc_attach"> <label class="pull-left mr-2 doc_icon"> <i class="'+extClass+'"></i> </label>  <label class="pull-left doc_name"> <a target="_blank" href="'+filePath+'">'+filePath+'</a></label> </div>';
									text = text + '<div class="time">' + sentTime + '</div></div>';
									
									$("#conversation").append(text);
						
									
									}
								
							
									
								  
								  }
								  
								  catch(e){console.log(e);}
                                }
                                else if (messageTypeId == 4 && resMsg2 != "EndChat from Customer" ) {
									 isEndChatCon = 1;
                                    imgUrl = "https://hub-chat.telebu.com/StaticFiles/images/Sender-sm.png";
									
									 try{
								  resMsg2 = JSON.parse(resMsg2);
								  }
								  catch(e){}
								  
									
											
								  try{
									if(!resMsg2.includes("Name:") && typeof(resMsg2) != "object"){
									
										 var conversation = '<div class="speechItem"><div class="clearfix"><img src="' + imgUrl + '" alt="" class="left"/><div class="speechLeft">';
											conversation = conversation + '<p>' + resMsg2 + '</p>' + butt + '</div><div class="time">' + msgTime2 + '</div></div>';
											$("#conversation").append(conversation);
									
									}
									 if (resMsg2[0].hasOwnProperty("attachment")) {
										 if (resMsg2[0].attachment.type == "video") {
											var video_url = resMsg2[0].attachment.payload.src;
										var text = "";
										 text = text + '<div class="speechItem"><div class="clearfix">';
										text = text + '<img src="' + imgUrl + '" alt="" class="left mCS_img_loaded"/><div class="speechLeft">';
										text = text + '<iframe class="thumb_attach" src="' + video_url + '" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="" style="pointer-events:auto;"></iframe></div>';
										text = text + '<div class="time">' + msgTime2 + '</div>';

											$("#conversation").append(text);
                                           
											 }
											 }
									  if(resMsg2[0].custom[0].payload == "image"){
									var filePath =resMsg2[0].custom[0].text;
									  var text = "";
						
									 var text = "";
										text = text + '<div class="speechItem"><div class="clearfix">';
										text = text + '<img src="' + imgUrl + '" alt="" class="left mCS_img_loaded"/>';
										text = text + '<div class="speechLeft"><a target="_blank" href="' + filePath + '"><img src="' + filePath + '" class="thumb_attach mCS_img_loaded" width="100"></a></div></div>';
										text = text + '<div class="time">' + msgTime2 + '</div>';
									$("#conversation").append(text);
									
									
									}
									else if(resMsg2[0].custom[0].payload == "excel" || resMsg2[0].custom[0].payload == "pdf"){
									 var text = "",extClass="",extnsn="";
									 var filePath =resMsg2[0].custom[0].text;
										 

										var regExp = /(?:\.([^.]+))?$/;
										var extnsn = regExp.exec(filePath)[1];
										extnsn=extnsn.toLowerCase();

									
									if(extnsn == "pdf"|| extnsn == "docx")
										extClass="far fa-file-pdf fa-2x";
									else if(extnsn == "xls" || extnsn == "xlsx" ||  extnsn == "csv" )
										extClass="far fa-file-excel fa-2x";



										var text = "";
										text = text + '<div class="speechItem"><div class="clearfix">';
										text = text + '<img src="' + imgUrl + '" alt="" class="left mCS_img_loaded"/><div class="speechLeft">';
										text = text + ' <div class="clearfix p-1 doc_attach"> <label class="pull-left mr-2 doc_icon"> <i class="' + extClass + '"></i> </label>  <label class="pull-left doc_name"> <a  target="_blank" href="' + filePath + '">' + filePath + '</a></label></div></div>';
										text = text + '<div class="time">' + msgTime2 + '</div>';
										
										$("#conversation").append(text);
									}
										
											// else{
											  
											 
											// }
								  }
								   catch(e){}
									
                                   
                                  
									

                                }
                                //if (resMsg2 != "undefined" && resMsg2 != undefined) {
                                //    $("#conversation").stop().animate({ scrollTop: $("#conversation")[0].scrollHeight }, 1000);
                                //}

                                // document.getElementById("imgUrl").src=imgUrl; <div class="time">02:30 PM</div>
                            }
                            $("#AllChats").hide();
                            $("#ExistingUser").hide();
                            var CId = localStorage.getItem("conversationId");
                            if (isEndChatCon == 0) {
                                endchat = "";
                                localStorage.setItem("isEndReason", 0);
                            }
                            if (ActualConversationId != CId) {
                                localStorage.setItem("OldChatConversationId", ActualConversationId);
                                localStorage.setItem("reopenOldConversation",reopenOldConversation )
                                $(".startOver").children().attr("ActualConversationId", ActualConversationId);
                                //$(".startOver").show();
                               // $(".typeArea").hide();
							   if (conEndchat == 1)
                                {
										$(".startOver").children().attr("ActualConversationId", currentConversationId);
										$(".startOver").show();
										$(".typeArea").hide();
								}
								else{
                                    // $(".typeArea").show();
                                     $(".startOver").hide();
									 
									   if (global_BotFlowCompleted == 0)
										$(".typeArea").hide();
										else
										$(".typeArea").show();
								}
                            } else {

                                localStorage.setItem("OldChatConversationId", "");
                                localStorage.setItem("reopenOldConversation","" )
                                $(".startOver").hide();
                                if (isEndChatCon == 1) {
                                    if (localStorage.getItem("AgentName") == null) {
                                       // $("#custName").text("Bot");
										$("#custName").text(AssignedAgent);
                                    } else {
                                       // $("#custName").text(localStorage.getItem("AgentName"));
										$("#custName").text(AssignedAgent);
                                    }

                                    $(".typeArea").show();
                                } else {
                                    if (localStorage.getItem("isEndReason") == "0") {
                                        localStorage.setItem("IsUsed", 1);
                                       // $(".btnSubmit-sm").removeAttr("disabled");
                                       // $(".btnSubmit-sm").removeAttr("style");
                                        //$(".btnSubmit").removeAttr("disabled");
                                       // $(".btnSubmit").removeAttr("style");
										
										$(".speechLeft").last().find("button").removeAttr("disabled").removeAttr("style");
                                        $("#custName").text("Bot");
                                    }
                                    $(".typeArea").hide();
                                }
								 if (conEndchat == 1)
								 {
								 // $(".startOver").children().attr("ActualConversationId", localStorage.getItem("conversationId"));
								    $(".startOver").children().attr("ActualConversationId", currentConversationId);
                                    $(".startOver").show();
                                      $(".typeArea").hide();
                                  }
								  else{
								  if (global_BotFlowCompleted == 0)
										$(".typeArea").hide();
										else
										$(".typeArea").show();
								 }

                            }

                          //  $("#conversation").stop().animate({ scrollTop: $("#conversation")[0].scrollHeight }, 1000);

                            $("#backToAllChats").show();
                                $("#chatWindow").removeClass("hide");
                                $("#chatWindow").addClass("animated fadeInRight");


                        }
                    }
                }
                  $(".formBase").mCustomScrollbar("scrollTo", "bottom");
				  $("#custName").text(AssignedAgent);
            }
        });

        function loadChatWidget() {
            // SubscribeToSocket()
              $("#custName").text("Bot");
            $(".scroll").mCustomScrollbar({
                    theme: "minimal"
                });
            //    //$("#submitForm").addClass("hide");
                //$("#chatWindow").addClass("animated fadeInRight show");
                isAgent =@data.IsAgent;
                if (isAgent == 1) {
                    if (isPingAgent == 1) {
                        $("#bnrTitle").text("Ping Agent");
                        SubscribeToSocket();
                       // UpdateAgentsForHubchat('ready', 2058);
                    }
                }

                var Data = JSON.stringify({
                    "StatusId": "1"
                });
                var url1 = url + "/accounts/" + AccountId + "/widgets/" + WidgetId + "/conversations/";
                console.log('raja' + url1);
                $.ajax({
                    type: "POST",
                    url: url1,
                    dataType: "JSON",
                    contentType: "application/json",
                    async: false,
                    data: Data,
                    success: function (res) {
                        conversationId = res.Id;
						msgIds=[];
                        localStorage.setItem("conversationId", conversationId);
                        BotInteraction(conversationId, "hi")
                        // alert(conversationId);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                       // alert(textStatus);
					    console.log(textStatus);
                    }
                });
        }

        function GetReadableTimeDiff(tmpDate){
	        var timeDiffinMins = Math.abs(tmpDate - new Date())/(1000*60);
	        if(timeDiffinMins <= 1){
		        return  'Just now';
	        }
	        else if(timeDiffinMins <= 59){
		        return  parseInt(timeDiffinMins) + ' min';
	        }
	        else if(timeDiffinMins <= 1440){
		        return  parseInt(timeDiffinMins/60) + 'h ago';
	        }
	        else {
		        return  parseInt(timeDiffinMins/(60*24)) + 'd ago';
	        }
        }

        function getOldConversationHistory() {
            var oldActiveconversationId =  localStorage.getItem("OldConversationIdActive");
			conversationId = localStorage.getItem("conversationId");
			var name="isAgentconnected_"+oldActiveconversationId;
			if(localStorage.getItem(name)== "0")
				oldActiveconversationId=conversationId;
            var customerId = localStorage.getItem("customerId");
            var customerName = localStorage.getItem("customerName");
                var g=@x;
				var	isEndChatCon=0;
            var WidgetId =@data.WidgetId;
            var AccountId =@data.AccountId;
           // var url = "http://hubchat.com";
             var url ="https://hub-chat.telebu.com";
            var imgUrl = url + "/StaticFiles/images/Sender-sm.png";
             
            var url2 = url + "/accounts/" + AccountId + "/widgets/" + WidgetId + "/conversations/"+customerId+"/GetConversationsOfCustomer/";

			 $.ajax({
                type: "GET",
                url: url2,
                dataType: "JSON",
                contentType: "application/json",
                async: false,
                data: "",
                success: function (res) {
                    if (res.length > 0) {
					var OldConversationChat11 = {};
                        OldConversationChat1 = JSON.stringify(res);
                        OldConversationChat1 = JSON.parse(OldConversationChat1);

                                if (OldConversationChat1.length > 0) {
                                    for (var r = OldConversationChat1.length - 1; r >= 0; r--) {
                                        if (OldConversationChat1[r].ConversationId == oldActiveconversationId) {
                                            ActualConversationId = OldConversationChat1[r].ConversationId
                                            $("#conversation").html("");
                                            for (var j = 0; j < OldConversationChat1[r].ConversationMessages.length; j++) {
                                var reopenOldConversation = JSON.stringify(OldConversationChat1[r].ConversationMessages)
                                var retValue2 = OldConversationChat1[r].ConversationMessages[j].Message;
                                var messageTypeId = OldConversationChat1[r].ConversationMessages[j].MessageTypeId;
                                //console.log(retValue2)
                                var resMsg2 = OldConversationChat1[r].ConversationMessages[j].Message;
                                var msgTime2 = new Date(OldConversationChat1[r].ConversationMessages[j].CreatedTimeUTC.replace('T', ' ') + 'Z');
                                                msgTime2 = msgTime2.toLocaleString()

                                butt = "";
																						$("#custName").text(OldConversationChat1[r].AssignedAgent);
                                 if (messageTypeId == 2 ) {
                                    resMsg2 = JSON.parse(resMsg2);
                                    for (var o = 0; o < resMsg2.length; o++) {
                                        try {
                                            if (resMsg2[o].buttons == undefined) { }
                                            else {
                                                if (resMsg2[o].buttons.length > 0) {
                                                    butt = "";
                                                    butt = '<div class="mt-2">';
                                                    for (var i = 0; i < resMsg2[o].buttons.length; i++) {
                                                        if (resMsg2[o].buttons[i].payload == "submit") {
                                                            butt = butt + '<hr class="mt-2 mb-3 chat-hr">'
                                                            butt = butt + '<div class="center"><button type="button question="' + resMsg2[o].text+'" onclick="submitAction(this)" value="Submit" class="btnSubmit small mr-2 mb-2 " disabled="disabled" style="cursor:not-allowed">Submit</button></div>'
                                                        }
                                                        else
                                                            butt = butt + '<button type="button" onclick="btnAction(this)" value="' + resMsg2[o].buttons[i].title + '" class="btnSubmit-sm mr-2 mb-2 " disabled="disabled" style="cursor:not-allowed">' + resMsg2[o].buttons[i].title + '</button>';
                                                    }
                                                    butt = butt + '</div>';
                                                }
                                            }
                                        }
                                        catch (e) { console.log(e); }

                                         var conversation = '<div class="speechItem"><div class="clearfix"><img src="' + imgUrl + '" alt="" class="left"><div class="speechLeft">';
                                        conversation = conversation + '<p>' + resMsg2[o].text + '</p>' + butt + '</div> </div><div class="time">' + msgTime2 + '</div>';
                                        if(resMsg2[o].text !=undefined )
                                        $("#conversation").append(conversation);
											 if (resMsg2[o].hasOwnProperty("attachment")) {
										 if (resMsg2[o].attachment.type == "video") {
											var video_url = resMsg2[o].attachment.payload.src;

											var text1 = '<div class="video-container"> <iframe src="' + video_url + '" frameborder="0" allowfullscreen></iframe> </div>'

											$("#conversation").append(text1);
                                             $(".formBase").mCustomScrollbar("scrollTo","bottom");
											 }
											 }
                                        if (resMsg2[o].custom == undefined){}
										 else if(resMsg2[o].custom[0].payload == "image")
										{
											var grptlk=resMsg2[o].custom[0].text;
											var text1 = '<div class="speechItem"><div class="clearfix"><img src="' + imgUrl + '" alt="" class="left"><div class="speechLeft">';
											//text1 = text1 + '<a href=grptlk><img width="20%" height="20%" src="' + grptlk+ '" alt="" ><a></div></div>';
											text1 = text1 + '<a href="'+grptlk+'" target="_blank">'+grptlk+'<a></div></div>';
											$("#conversation").append(text1);
                                            $(".formBase").mCustomScrollbar("scrollTo","bottom");
										}
                                        else if (resMsg2[o].custom[0].text != "" && resMsg2[o].custom[0].text != null && resMsg2[o].custom[0].text != undefined) {
                                            endchat = "TalkingToAgent";
                                            localStorage.setItem("isEndReason", 1);
											globalchat.isEndReason =1;
						localStorage.setItem(global_ChatName,JSON.stringify(globalchat));
											
                                            //customerWebSocketSubscription();
                                            isEndChatCon = 1;
                                            var conversation = '<div class="speechItem"><div class="clearfix"><img src="' + imgUrl + '" alt="" class="left"><div class="speechLeft">';
                                        conversation = conversation + '<p>' + resMsg2[o].custom[0].text + '</p>' + butt + '</div><div class="time">' + msgTime2 + '</div></div>';
                                        $("#conversation").append(conversation);
                                        }
										
										 else if(resMsg2[o].custom[0].payload == "Form_Field" && localStorage.getItem("isEndReason") == "0") //endchat == "")
										{
												var text1 = '<div class="center"><label class="text-danger f12 lblEditErrorMsg1"></label>';
												text1 =text1+'<input fieldtype="TextBox"  placeholder="enter email or mobile" id="frmfield" autocomplete="off" maxlength="50" class="text-box field EmailField txtRequired ">';
												text1 = text1 + '<button class="btnSubmit" id="Submit1">Submit</button></div>';
												
												$("#conversation").append(text1);
												$(".formBase").mCustomScrollbar("scrollTo","bottom");
									
											
										}
                                    }

                                } 
								else if (messageTypeId == 1 && resMsg2 != "success" && resMsg2 != "hi") {
                                    if (resMsg2 == "/affirm{\"group\":\"Yes\"}") {
                                        resMsg2 = "Yes";
                                    }
                                    else if (resMsg2 == "/deny{\"group\":\"No\"}") {
                                        resMsg2 = "No";
                                    }
                                    if (resMsg2 == "Yes" || resMsg2 == "No")
                                        $(".formBase").find('button[value="' + resMsg2 + '"]').last().addClass("select");
                                    else {
                                        var resmsg2Arr = resMsg2.split(',');
                                        if (resmsg2Arr.length > 1) {
                                            for (var z = 0; z < resmsg2Arr.length; z++) {
                                                $(".formBase").find('button[value="' + resmsg2Arr[z] + '"]').addClass("select");
                                            }
                                        }
                                        else
                                            $(".formBase").find('button[value="' + resMsg2 + '"]').addClass("select");
                                    }
                                    var text = '<div class="speechItem right"><div class="speechRight">';
                                    text = text + '<p>' + msg + '</p></div>';
                                    text = text + '<div class="time">' + sentTime + '</div></div>';

                                    var conversation = '<div class="speechItem right"><div class="speechRight">';
                                    conversation = conversation + '<p>' + resMsg2 + '</p></div>';
                                    conversation = conversation + '<div class="time">' + msgTime2 + '</div></div>';
                                    $("#conversation").append(conversation);
                                }
                                else if (messageTypeId == 3 && resMsg2 != "EndChat from Customer") 
								{
								
								
                                   // var conversation = '<div class="speechItem right"><div class="speechRight">';
                                   // conversation = conversation + '<p>' + resMsg2 + '</p></div>';
                                  //  conversation = conversation + '<div class="time">' + msgTime2 + '</div></div>';
                                   // $("#conversation").append(conversation);
								   
								   	  try{
								  resMsg2 = JSON.parse(resMsg2);
								  }
								  catch(e){}
								  
									if(!resMsg2.includes("Name:") && typeof(resMsg2) != "object"){                                    
								   isEndChatCon = 1;
                                    var conversation = '<div class="speechItem right"><div class="speechRight">';
                                    conversation = conversation + '<p>' + resMsg2 + '</p></div>';
                                    conversation = conversation + '<div class="time">' + msgTime2 + '</div></div>';
                                    $("#conversation").append(conversation);}
									
									try{
								 // resMsg2 = JSON.parse(resMsg2);
								  if (resMsg2[0].hasOwnProperty("attachment")) {
										 if (resMsg2[0].attachment.type == "video") {
											var video_url = resMsg2[0].attachment.payload.src;
							var text = "";
							var text = '<div class="speechItem right"><div class="speechRight">';
							  text = text + '<iframe class="thumb_attach" src="'+ video_url +'" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="" style="pointer-events:auto;"></iframe>';
							text = text + '<div class="time">' + msgTime2 + '</div>';

											$("#conversation").append(text);
                                            // $(".formBase").mCustomScrollbar("scrollTo","bottom");
											 }
											 }
											 
								  if(resMsg2[0].custom[0].payload == "image"){
									var filePath =resMsg2[0].custom[0].text;
									  var text = "";
						
									var text = '<div class="speechItem right"><div class="speechRight">';
									text = text + ' <a target="_blank" href="'+filePath+'"><img src="' + filePath + '" class="thumb_attach mCS_img_loaded" width="100"></a></div> ';
									text = text + '<div class="time">' + msgTime2 + '</div></div>';
									$("#conversation").append(text);
									// $(".formBase").mCustomScrollbar("scrollTo","bottom");
									 
									// return false;
									
									}
										
						else if(resMsg2[0].custom[0].payload == "excel" || resMsg2[0].custom[0].payload == "pdf"){
									var filePath =resMsg2[0].custom[0].text;
									  var text = "",extClass="",extnsn="";
									  
									  var regExp = /(?:\.([^.]+))?$/;
										extnsn = regExp.exec(filePath)[1];
										extnsn=extnsn.toLowerCase();
						
									if(extnsn == "pdf"|| extnsn == "docx")
										extClass="far fa-file-pdf fa-2x";
									else if(extnsn == "xls" || extnsn == "xlsx"||  extnsn == "csv" )
										extClass="far fa-file-excel fa-2x";
								 
									 var text = '<div class="speechItem right"><div class="speechRight">';
									text = text + ' <div class="clearfix p-1 doc_attach"> <label class="pull-left mr-2 doc_icon"> <i class="'+extClass+'"></i> </label>  <label class="pull-left doc_name"> <a  target="_blank" href="'+filePath+'">'+filePath+'</a></label> </div>';
									text = text + '<div class="time">' + sentTime + '</div></div>';
									
									$("#conversation").append(text);
						
									
									}
								
									
								  
								  }
								   catch(e){}
									
                                } 
								else if (messageTypeId == 4 && resMsg2 != "EndChat from Customer")
								{
									  try{
								  resMsg2 = JSON.parse(resMsg2);
								  }
								  catch(e){}
								  if(typeof(resMsg2) != "object"){  
                                    var conversation = '<div class="speechItem"><div class="clearfix"><img src="' + imgUrl + '" alt="" class="left"><div class="speechLeft">';
                                    conversation = conversation + '<p>' + resMsg2 + '</p>' + butt + '</div><div class="time">' + msgTime2 + '</div></div>';
                                    $("#conversation").append(conversation);
									}
									
									try{
									
									 if (resMsg2[0].hasOwnProperty("attachment")) {
										 if (resMsg2[0].attachment.type == "video") {
											var video_url = resMsg2[0].attachment.payload.src;
							var text = '<div class="speechItem"><div class="clearfix"><img src="' + imgUrl + '" alt="" class="left"><div class="speechLeft">';
							  text = text + '<iframe class="thumb_attach" src="'+ video_url +'" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="" style="pointer-events:auto;"></iframe>';
							text = text + '<div class="time">' + msgTime2 + '</div>';

											$("#conversation").append(text);
                                             $(".formBase").mCustomScrollbar("scrollTo","bottom");
											 }
											 }
											 
									if(resMsg2[0].custom[0].payload == "image"){
									var filePath =resMsg2[0].custom[0].text;
									  var text = "";
						
									//var text = '<div class="speechItem"><div class="clearfix">';
									 var text = '<div class="speechItem"><div class="clearfix"><img src="' + imgUrl + '" alt="" class="left"><div class="speechLeft">';
									text = text + ' <a target="_blank" href="'+filePath+'"><img src="' + filePath + '" class="thumb_attach mCS_img_loaded" width="100"></a></div> ';
									text = text + '<div class="time">' + msgTime2 + '</div></div>';
									$("#conversation").append(text);
									// $(".formBase").mCustomScrollbar("scrollTo","bottom");
									 
									// return false;
									
									}
										
						else if(resMsg2[0].custom[0].payload == "excel" || resMsg2[0].custom[0].payload == "pdf"){
									var filePath =resMsg2[0].custom[0].text;
									  var text = "",extClass="",extnsn="";
									  
									  var regExp = /(?:\.([^.]+))?$/;
										extnsn = regExp.exec(filePath)[1];
										extnsn=extnsn.toLowerCase();
						
									if(extnsn == "pdf" || extnsn == "docx")
										extClass="far fa-file-pdf fa-2x";
									else if(extnsn == "xls" || extnsn == "xlsx"||  extnsn == "csv" )
										extClass="far fa-file-excel fa-2x";
								 
									var text = '<div class="speechItem"><div class="clearfix"><img src="' + imgUrl + '" alt="" class="left"><div class="speechLeft">';
									text = text + ' <div class="clearfix p-1 doc_attach"> <label class="pull-left mr-2 doc_icon"> <i class="'+extClass+'"></i> </label>  <label class="pull-left doc_name"> <a target="_blank" href="'+filePath+'">'+filePath+'</a></label> </div>';
									text = text + '<div class="time">' + sentTime + '</div></div>';
									
									$("#conversation").append(text);
									 $(".formBase").mCustomScrollbar("scrollTo","bottom");
						
									
									}
									}
									 catch(e){}

                                }
                                //if (resMsg2 != "undefined" && resMsg2 != undefined) {
                                //    $("#conversation").stop().animate({ scrollTop: $("#conversation")[0].scrollHeight }, 1000);
                                //}

                                // document.getElementById("imgUrl").src=imgUrl; <div class="time">02:30 PM</div>
                            }
                                            $("#AllChats").hide();
                                            $("#ExistingUser").hide();
                                            var CId = localStorage.getItem("conversationId");
											
											 $(".startOver").hide();
                                            $(".typeArea").show();
											
											var conEndchat=getConversationEndchat(oldActiveconversationId);
											
											if (global_BotFlowCompleted == 0){
										  // if (isEndChatCon == 0) {
                                                endchat = "";
                                                localStorage.setItem("isEndReason", 0);
												 $(".typeArea").hide();
                                            }


                                           // $(".startOver").hide();
                                            //$(".typeArea").show();
                                        }

                                      //  $("#conversation").stop().animate({ scrollTop: $("#conversation")[0].scrollHeight }, 1000);
                                        $(".formBase").mCustomScrollbar("scrollTo", "bottom");
                                        $("#chatWindow").removeClass("hide");
                                        $("#chatWindow").addClass("animated fadeInRight");
                                    }
                        }
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    //alert(textStatus);
					 console.log(textStatus);
                }
            });

        }
        //function GetCurrentWidgetConfiguration(WidgetId) {
        //   // http://www.localhost:65000/accounts/5/widgets/l42Gcm6lckDfr1CafqRZsgv0QK0EmHO9
        //     var url2 = url + "/accounts/" + AccountId + "/widgets/" + WidgetId

        //    	 $.ajax({
        //        type: "GET",
        //        url: url2,
        //        dataType: "JSON",
        //        contentType: "application/json",
        //        async: false,
        //        data: "",
        //        success: function (res) {
        //            if (res.length > 0) {

        //            }
        //        },
        //        error: function (jqXHR, textStatus, errorThrown) {
        //            console.log(textStatus);
        //        }
        //    });
        //}


        function GenerateDynamicWelcomeFrom() {
            var SettingsData;
            var welcomeFormData = localStorage.getItem("widgetConfiguration");
            // console.log(welcomeFormData);
            if (welcomeFormData != null) {

                welcomeFormData = JSON.parse(welcomeFormData);

                if (welcomeFormData.MetaData != "" && welcomeFormData.MetaData != undefined && welcomeFormData.MetaData != "[]") {
                    SettingsData = JSON.parse(welcomeFormData.MetaData);
                } else if (welcomeFormData.CustomMetaData != "" && welcomeFormData.CustomMetaData != undefined && welcomeFormData.CustomMetaData != "[]") {
                    SettingsData = JSON.parse(welcomeFormData.CustomMetaData);
                }
            }
            //console.log(JSON.stringify(SettingsData));

    //var SettingsData = [{ "FieldName": "Pan Number", "FieldType": "TextBox", "Prority": "1", "PlaceHolder": "Alphabets", "MaxChars": "40", "AllowSpecialChars": "No", "Mandatory": "No" }, { "FieldName": "Gender", "FieldType": "DropDown", "Prority": "2", "Options": "Female,Male", "Mandatory": "No" }, { "FieldName": "Account Number", "FieldType": "TextBox", "Prority": "3", "PlaceHolder": "Numeric", "MaxChars": "16", "AllowSpecialChars": "Yes", "Mandatory": "Yes" }, { "FieldName": "Email", "FieldType": "TextBox", "Prority": "2", "PlaceHolder": "Unicode", "MaxChars": "50", "AllowSpecialChars": "Yes", "Mandatory": "Yes" }]

            //SettingsData = [{ "FieldName": "Name", "FieldType": "TextBox", "Prority": "primary", "PlaceHolder": "Alphabets", "MaxChars": "100", "AllowSpecialChars": "Yes", "Mandatory": "Yes" },
            //            { "FieldName": "Mobile", "FieldType": "TextBox", "Prority": "primary", "PlaceHolder": "Numeric", "MaxChars": "100", "AllowSpecialChars": "Yes", "Mandatory": "Yes" },
            //            {"FieldName":"Email","FieldType":"TextBox","Prority":"2","PlaceHolder":"Unicode","MaxChars":"50","AllowSpecialChars":"Yes","Mandatory":"Yes"}]
    var global_CallerDetails = [], global_ExcelFields = [];


    var editCallerDetailsData = "";
    if (SettingsData != "") {
        var settingsArray = SettingsData;
        $.each(settingsArray, function (key, value) {

            var callerAttributesObj = settingsArray[key];

             editCallerDetailsData += "<div class='form-group'><label class='form-label'>" + value.FieldName;
            //editCallerDetailsData += "<div class='col-sm-6'><div class='form-group'><label class='txt-grey'>" + value.FieldName;
            if (callerAttributesObj.Mandatory == "Yes") {
                editCallerDetailsData += "<span class='text-danger'>*</span>";
            }
            editCallerDetailsData += "</label>"
            if (callerAttributesObj.FieldType == "TextBox") {
                if (callerAttributesObj.FieldName.toLowerCase().includes("date"))
                    editCallerDetailsData += "<input type='Date' Key='" + callerAttributesObj.FieldName + "'id = 'txt" + callerAttributesObj.FieldName + "'class='text-box";
                if (callerAttributesObj.FieldName.toLowerCase().includes("date"))
                    editCallerDetailsData += "<input type='email' Key='" + callerAttributesObj.FieldName + "'id = 'txt" + callerAttributesObj.FieldName + "' maxlength='" + callerAttributesObj.MaxChars + "' class='text-box  field " + callerAttributesObj.PlaceHolder;
                else
                    editCallerDetailsData += "<input FieldType='" + callerAttributesObj.FieldType + "' Key='" + callerAttributesObj.FieldName + "' maxlength='" + callerAttributesObj.MaxChars + "' class='text-box field " + callerAttributesObj.PlaceHolder;
                if (callerAttributesObj.Mandatory == "Yes") {
                    editCallerDetailsData += " txtRequired "
                }
                if (callerAttributesObj.AllowSpecialChars == "No") {
                    editCallerDetailsData += " NoSpecialChars"
                }
                editCallerDetailsData += "' />"
            }
            //if (callerAttributesObj.FieldType == "DropDown") {
            //    editCallerDetailsData += "<select FieldType='" + callerAttributesObj.FieldType + "' Key='" + callerAttributesObj.FieldName + "' id='ddl" + callerAttributesObj.FieldName + "' class='field form-control";

            //    if (callerAttributesObj.Mandatory == "Yes") {
            //        editCallerDetailsData += " ddlRequiredField"
            //    }
            //    editCallerDetailsData += "'>";
            //    editCallerDetailsData += "<option value='Select'> Select </option>"
            //    var ddlOptions = callerAttributesObj.Options.split(",");
            //    $.each(ddlOptions, function (k, v) {
            //        editCallerDetailsData += "<option value='" + v + "'>" + v + "</option>";
            //    });
            //    editCallerDetailsData += "</select>"
            //}
            if (callerAttributesObj.FieldType == "DropDown") {
                editCallerDetailsData += "<select FieldType='" + callerAttributesObj.FieldType + "' Key='" + callerAttributesObj.FieldName + "' id='ddl" + callerAttributesObj.FieldName + "' class='field form-control";

                if (callerAttributesObj.Mandatory == "Yes") {
                    editCallerDetailsData += " ddlRequiredField"
                }
				 if (callerAttributesObj.MultiSelect == "Yes") {
                                editCallerDetailsData += " CrmMultiselect"
                                editCallerDetailsData += "' multiple='multiple'>";
                            }
                            else {
                                editCallerDetailsData += "'>";
                            }

                if (callerAttributesObj.MultiSelect != "Yes") {
                    editCallerDetailsData += "<option value='Select'> Select </option>";
                } else {
                    editCallerDetailsData += "<option value='Select'> Select </option>";
                }

               // editCallerDetailsData += "'>";

                var ddlOptions = callerAttributesObj.Options.split(",");
                $.each(ddlOptions, function (k, v) {
                    editCallerDetailsData += "<option value='" + v + "'>" + v + "</option>";
                });
                editCallerDetailsData += "</select>"
            }
            if (callerAttributesObj.FieldType == "TextArea") {
                editCallerDetailsData += "<textarea row='4' cols='20' FieldType='" + callerAttributesObj.FieldType + "' key='" + callerAttributesObj.FieldName + "' maxlength='" + callerAttributesObj.MaxChars + "'  class='" + callerAttributesObj.PlaceHolder;
                if (callerAttributesObj.Mandatory == "Yes") {
                    editCallerDetailsData += " txtRequired "
                }
                editCallerDetailsData += " form-control field' ></textarea>"
            }


            editCallerDetailsData += "</div>"
        });
    }
   // editCallerDetailsData += "</div>";
   // editCallerDetailsData += "</hr><table class='table no-border'> <tr><td class='txt-grey'>Alternate Number</td><td><input type='text' id='txtalternatenumber' placeholder='Alternate Number'  maxlength='35' class='form-control onlynumbers'/></td> <td><i class='icon-plus text-blue AddAlternatenumber pointer ' title='Add Alternate number'></i></td> </tr><tr id='Number_0'> </tr></table>"

             if (localStorage.getItem("TimeToDisplayWelcomeFrom") == "At the start of the conversation") {
                 $("#tblAddCallerDetails").html(editCallerDetailsData);
                 $(".CrmMultiselect").multiselect({
                     includeSelectAllOption: true,
                     buttonWidth: '100%'

                 });
             } else if (localStorage.getItem("TimeToDisplayWelcomeFrom") == "Before connecting to an agent") {
                 editCallerDetailsData = "<div class='chat_form'><div><label class='text-danger text-center col-sm-12' id='lblEditErrorMsg'></label></div>" + editCallerDetailsData;
                 editCallerDetailsData += "<div class='center mt-3'><button class='btnSubmit' id='Submit'>Submit</button></div></div>";
                 //localStorage.setItem("editCallerDetailsData",editCallerDetailsData);
                 $("#conversation").append(editCallerDetailsData);
                 $('.CrmMultiselect').multiselect({
                     includeSelectAllOption: true,
                     buttonWidth: '100%'

                 });
             } else if (localStorage.getItem("TimeToDisplayWelcomeFrom") == "After agent is connected") {
                 editCallerDetailsData = "<div class='chat_form'><div><label class='text-danger text-center col-sm-12' id='lblEditErrorMsg'></label></div>" + editCallerDetailsData;
                 editCallerDetailsData += "<div class='center mt-3'><button class='btnSubmit' id='Submit'>Submit</button></div></div>";
                   // localStorage.setItem("editCallerDetailsData",editCallerDetailsData);
                 $("#conversation").append(editCallerDetailsData);
                 $('.CrmMultiselect').multiselect({
                     includeSelectAllOption: true,
                     buttonWidth: '100%'

                 });
}


}


        $(document).delegate("#backToAllChats", "click", function () {
            $("#backToAllChats").hide();
            $("#chatWindow").addClass("hide");
             GetConversationMessages("0");
            $("#AllChats").show();
        });

        function funGetWidget(widgetUUID) {
            //  http://hubchat.com
            $.ajax({
                url: "https://hub-chat.telebu.com/accounts/" + AccountId + "/widgets/" + widgetUUID,
                type: "GET",
                async: false,
                dataType: "JSON",
                data: {},
                success: function (res) {
                    // console.log(res);

                    if (res.Success == true) {
                        //  console.log(JSON.stringify(res.widgets));

                        var chatIcon_Color = res.widgets.WidgetThemes.Color;
                        var widgetThemeColor = chatIcon_Color + "Theme";

                        $(".widgetTheme").attr("Id", widgetThemeColor);
                        // $(".iconTheme").attr("Id", chatIconColor);
                        localStorage.setItem("MaxWaitTimeToAgent", res.widgets.AgentAndCustomerWaitTimeRestrictionInSec);
                        localStorage.setItem("WhileConnectingToAnAgent", res.widgets.WhileConnectingToAnAgent);
                        localStorage.setItem("CustomerWaitTimeforAgentConnect", res.widgets.CustomerWaitTimeForAgentConnect);
                        localStorage.setItem("AutoCloseTimeForChatInMin", res.widgets.AutoCloseTimeForChatInMin);
                        localStorage.setItem("BotChatClosure", res.widgets.BotChatClosure);
                        localStorage.setItem("CustomerChatClosure", res.widgets.AgentChatClosure);
                        localStorage.setItem("widgetConfiguration", JSON.stringify(res.widgets));

                        localStorage.setItem("NonBusinessHoursMessage", res.widgets.NonBusinessConnect);
                        localStorage.setItem("TimeToDisplayWelcomeFrom", res.widgets.TimeToDisplayWelcomeFormToCustomer);
                        GetTimeSlots(res.widgets.TimeSlotId);

                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    if (jqXHR.status == 401) {
                        window.location.href = "/Login.aspx?message=Session expired";
                    } else {
                        console.log(errorThrown);
                    }
                }
            });
        }

        function GetTimeSlots(TimeSlotId) {
            localStorage.setItem("NonBusinessHours", 1);
            var NonBusinessHoursMessage = "";
              $.ajax({
        type: "GET",
                  async: false,
        url: "https://web.press3.io/TestAgentData.aspx",
        dataType: "JSON",
                  data: {
                      type: 3, AccountId: AccountId,
                      TimeSlotId: TimeSlotId

        },
                  success: function (res) {

                      for (var p = 0; p <= res.length - 1; p++) {

                          var currentDay = getDayAndTime(1);
                          var ActualDay = res[p].Day;
                          if (ActualDay == currentDay) {
                              localStorage.setItem("NonBusinessHours", 0);
                              localStorage.setItem("CurrentDay", res[p].Day );
                              localStorage.setItem("FromTime", res[p].FromTime);
                              localStorage.setItem("ToTime", res[p].ToTime);
                               NonBusinessHoursMessage = localStorage.getItem("NonBusinessHoursMessage");
                                if (localStorage.getItem("NonBusinessHours") == "0") {
                                    NonBusinessHoursMessage = NonBusinessHoursMessage.replace("X Hrs", localStorage.getItem("FromTime") + " Hrs");
                                    NonBusinessHoursMessage = NonBusinessHoursMessage.replace("Y Hrs", localStorage.getItem("ToTime") + " Hrs");
                                    localStorage.setItem("NonBusinessHoursMessage",NonBusinessHoursMessage);
                                }
                            //  NonBusinessHoursMessage = res[p].NonBusinessConnect;
                              //NonBusinessHoursMessage = NonBusinessHoursMessage.replace("X Hrs", res[p].FromTime +" Hrs");
                              //NonBusinessHoursMessage = NonBusinessHoursMessage.replace("Y Hrs", res[p].ToTime +" Hrs");
                            //  localStorage.setItem("NonBusinessHoursMessage",NonBusinessHoursMessage);
                          }
                          //else {
                          //    NonBusinessHoursMessage = res[p].NonBusinessConnect;
                          //    //NonBusinessHoursMessage = NonBusinessHoursMessage.replace("X Hrs", res[p].FromTime +" Hrs");
                          //    //NonBusinessHoursMessage = NonBusinessHoursMessage.replace("Y Hrs", res[p].ToTime +" Hrs");
                          //    localStorage.setItem("NonBusinessHoursMessage",NonBusinessHoursMessage);
                          //    localStorage.setItem("NonBusinessHours", 1);

                          //}
                      }

        },
        error: function (jqXHR, textStatus, errorThrown) {
            console.log(textStatus);
        }
    });
        }


        function getDayAndTime(dayOrTime) {
            var objToday = new Date(),
                weekday = new Array('Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'),
                dayOfWeek = weekday[objToday.getDay()],
                curHour = objToday.getHours()>9?objToday.getHours():"0"+objToday.getHours(),
                curMinute = objToday.getMinutes()>9?objToday.getMinutes():"0"+objToday.getMinutes(),
                curSeconds = objToday.getSeconds()>9?objToday.getSeconds():"0"+objToday.getSeconds()

            if (dayOrTime == 1) {
                return dayOfWeek;
            } else {
                return curHour + ":" + curMinute + ":" + curSeconds
            }


        }
  function getToken() {
             var username="5ea2ff6537d6611ad919b4b3",pwd="buhubelet";
            var url1 = "https://chat-ping.telebu.com/api/getToken";

                $.ajax({
                    type: "GET",
                    url: url1,
                    dataType: "JSON",
                    contentType: "application/json",
                    async: false,
                  headers: {
                 "Authorization": "Basic"+" "+ btoa(username + ':' +pwd)
                   },
                    success: function (res) {
                        console.log(res);
                        pingToken = res.token;
                        localStorage.setItem("pingToken", pingToken);

                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                      //  alert(textStatus);
					   console.log(textStatus);

                    }
                });
             return pingToken;
        }
        function GetPingUserId(mobile) {
            var pingUrl = "https://chat-ping.telebu.com/api/getUserId";
            var pingData = JSON.stringify({

	            "mobileNumber":mobile,
                "countryCode": "+91",
                "token": localStorage.getItem("pingToken")
            });
             $.ajax({
                    type: "POST",
                    url: pingUrl,
                    dataType: "JSON",
                    contentType: "application/json",
                    async: false,
                    data: pingData,
                    success: function (res) {
                        console.log(res.pingId);
                        localStorage.setItem("pingAgentId", res.pingId);
                        // alert(conversationId);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                       // alert(textStatus);
					    console.log(textStatus);
                    }
             });
        }
        function PingConversation() {
             var pingUrl = "https://chat-ping.telebu.com/conversation/new"
             var pingData = JSON.stringify({
                 "conversationId": localStorage.getItem("conversationId"),//conversationId,
                "pingId":   localStorage.getItem("pingAgentId"),//"5d820a80c3ad6403558f612d",
                "token": localStorage.getItem("pingToken"),
                "name": localStorage.getItem("customerName")

             });
             $.ajax({
                    type: "POST",
                    url: pingUrl,
                    dataType: "JSON",
                    contentType: "application/json",
                    async: false,
                    data: pingData,
                    success: function (res) {
                        console.log(res);
                        userId = res._id;
                        localStorage.setItem("userId", userId);
                        UpdatePingUserId(userId);
                        // alert(conversationId);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                       // alert(textStatus);
					    console.log(textStatus);
                    }
             });
        }

        /* Attachmnents code */
         // var attachIcon = $("#fileAttach");
       // attachIcon.click(function () {
           $(document).delegate("#fileAttach", "click", function () {
           $("#fileUpload").click();
           });
        if (window.File && window.FileReader && window.FileList && window.Blob) {
         document.getElementById('fileUpload').addEventListener('change', handleFileSelect, false);
        } else {
          alert('The File APIs are not fully supported in this browser.');
        }

        function handleFileSelect(evt) {
               var f = evt.target.files[0]; // FileList object
			  if(f == "" || f == undefined || f == null )
				return false;
			  global_File=evt.target.files[0];
              var regExp = /(?:\.([^.]+))?$/;
			  fileName=f.name;
			  fileSize=f.size;
              extnsn = regExp.exec(f.name)[1];
			
			  extnsn=extnsn.toLowerCase();
			  if(extnsn != "png" &&  extnsn != "jpg" && extnsn != "jpeg" && extnsn != "csv" && extnsn != "xlsx" &&  extnsn != "xls" &&  extnsn != "pdf" &&  extnsn != "mp3" &&  extnsn != "mp4" && extnsn != "docx")
			  {
					 $(".poweredBy").html("Not a valid format!Kindly select Imaes,videos or docs");
					 $(".poweredBy"). css('font-size', "13px");
					 $(".poweredBy").css("color","red");
                    setTimeout(function () {

					  $(".poweredBy").html("Powered by Telebu");
					   $(".poweredBy").css("color","#c6cfd6");
					   $(".poweredBy"). css('font-size', "10px");
						},3000);
						
					return false;
			  }
              var reader = new FileReader();
              // Closure to capture the file information.
              reader.onload = (function(theFile) {
                return function(e) {
                  var binaryData = e.target.result;
                  //Converting Binary Data to base 64
                   base64String = window.btoa(binaryData);
                  //showing file converted to base64
                    console.log(extnsn)
                    $("#send").click();
                };
              })(f);
              reader.readAsBinaryString(f);
        }


        function GenerateDynamicFrom() {
            var SettingsData;
            var welcomeFormData = localStorage.getItem("widgetConfiguration");
            // console.log(welcomeFormData);
            if (welcomeFormData != null) {

                welcomeFormData = JSON.parse(welcomeFormData);

                if (welcomeFormData.MetaData != "" && welcomeFormData.MetaData != undefined && welcomeFormData.MetaData != "[]") {
                    SettingsData = JSON.parse(welcomeFormData.MetaData);
                } else if (welcomeFormData.CustomMetaData != "" && welcomeFormData.CustomMetaData != undefined && welcomeFormData.CustomMetaData != "[]") {
                    SettingsData = JSON.parse(welcomeFormData.CustomMetaData);
                }
            }
            //console.log(JSON.stringify(SettingsData));

            //var SettingsData = [{ "FieldName": "Pan Number", "FieldType": "TextBox", "Prority": "1", "PlaceHolder": "Alphabets", "MaxChars": "40", "AllowSpecialChars": "No", "Mandatory": "No" }, { "FieldName": "Gender", "FieldType": "DropDown", "Prority": "2", "Options": "Female,Male", "Mandatory": "No" }, { "FieldName": "Account Number", "FieldType": "TextBox", "Prority": "3", "PlaceHolder": "Numeric", "MaxChars": "16", "AllowSpecialChars": "Yes", "Mandatory": "Yes" }, { "FieldName": "Email", "FieldType": "TextBox", "Prority": "2", "PlaceHolder": "Unicode", "MaxChars": "50", "AllowSpecialChars": "Yes", "Mandatory": "Yes" }]

            //SettingsData = [{ "FieldName": "Name", "FieldType": "TextBox", "Prority": "primary", "PlaceHolder": "Alphabets", "MaxChars": "100", "AllowSpecialChars": "Yes", "Mandatory": "Yes" },
            //            { "FieldName": "Mobile", "FieldType": "TextBox", "Prority": "primary", "PlaceHolder": "Numeric", "MaxChars": "100", "AllowSpecialChars": "Yes", "Mandatory": "Yes" },
            //            {"FieldName":"Email","FieldType":"TextBox","Prority":"2","PlaceHolder":"Unicode","MaxChars":"50","AllowSpecialChars":"Yes","Mandatory":"Yes"}]
            var global_CallerDetails = [], global_ExcelFields = [];


            var editCallerDetailsData = "";
            if (SettingsData != "") {
                var settingsArray = SettingsData;
                $.each(settingsArray, function (key, value) {

                    var callerAttributesObj = settingsArray[key];

                    editCallerDetailsData += "<div class='form-group'>";
                    //< label class='form-label' > " + value.FieldName;
                    //editCallerDetailsData += "<div class='col-sm-6'><div class='form-group'><label class='txt-grey'>" + value.FieldName;
                    //  if (callerAttributesObj.Mandatory == "Yes") {
                    //     editCallerDetailsData += "<span class='text-danger'>*</span>";
                    //  }
                    // editCallerDetailsData += "</label>"
                    if (callerAttributesObj.FieldType == "TextBox") {
                        if (callerAttributesObj.FieldName.toLowerCase().includes("date"))
                            editCallerDetailsData += "<input type='Date' placeholder='" + callerAttributesObj.FieldName + "' Key='" + callerAttributesObj.FieldName + "'id = 'txt" + callerAttributesObj.FieldName + "'class='text-box";
                        if (callerAttributesObj.FieldName.toLowerCase().includes("date"))
                            editCallerDetailsData += "<input type='email' placeholder='" + callerAttributesObj.FieldName + "' Key='" + callerAttributesObj.FieldName + "'id = 'txt" + callerAttributesObj.FieldName + "' maxlength='" + callerAttributesObj.MaxChars + "' class='text-box  field " + callerAttributesObj.PlaceHolder;
                        else
                            editCallerDetailsData += "<input placeholder='" + callerAttributesObj.FieldName + "' FieldType='" + callerAttributesObj.FieldType + "' Key='" + callerAttributesObj.FieldName + "' maxlength='" + callerAttributesObj.MaxChars + "' class='text-box field " + callerAttributesObj.PlaceHolder;
                        if (callerAttributesObj.Mandatory == "Yes") {
                            editCallerDetailsData += " txtRequired "
                        }
                        if (callerAttributesObj.AllowSpecialChars == "No") {
                            editCallerDetailsData += " NoSpecialChars"
                        }
                        editCallerDetailsData += "' />"
                    }
                    //if (callerAttributesObj.FieldType == "DropDown") {
                    //    editCallerDetailsData += "<select FieldType='" + callerAttributesObj.FieldType + "' Key='" + callerAttributesObj.FieldName + "' id='ddl" + callerAttributesObj.FieldName + "' class='field form-control";

                    //    if (callerAttributesObj.Mandatory == "Yes") {
                    //        editCallerDetailsData += " ddlRequiredField"
                    //    }
                    //    editCallerDetailsData += "'>";
                    //    editCallerDetailsData += "<option value='Select'> Select </option>"
                    //    var ddlOptions = callerAttributesObj.Options.split(",");
                    //    $.each(ddlOptions, function (k, v) {
                    //        editCallerDetailsData += "<option value='" + v + "'>" + v + "</option>";
                    //    });
                    //    editCallerDetailsData += "</select>"
                    //}

                    if (callerAttributesObj.FieldType == "DropDown") {
                        editCallerDetailsData += "<select FieldType='" + callerAttributesObj.FieldType + "' Key='" + callerAttributesObj.FieldName + "' id='ddl" + callerAttributesObj.FieldName + "' class='field form-control";

                        if (callerAttributesObj.Mandatory == "Yes") {
                            editCallerDetailsData += " ddlRequiredField "
                        }
                        if (callerAttributesObj.MultiSelect == "Yes") {
                            editCallerDetailsData += " CrmMultiselect mb-3"
                            editCallerDetailsData += "' multiple='multiple'>";
                        }
                        else {
                            editCallerDetailsData += "'>";
                        }

                        if (callerAttributesObj.MultiSelect != "Yes") {
                            editCallerDetailsData += "<option value='Select'> Select </option>";
                        } else {
                            editCallerDetailsData += "<option value='Select'> Select </option>";
                        }

                        // editCallerDetailsData += "'>";

                        var ddlOptions = callerAttributesObj.Options.split(",");
                        $.each(ddlOptions, function (k, v) {
                            editCallerDetailsData += "<option value='" + v + "'>" + v + "</option>";
                        });
                        editCallerDetailsData += "</select>"
                    }

                    if (callerAttributesObj.FieldType == "TextArea") {
                        editCallerDetailsData += "<textarea row='4' cols='20' FieldType='" + callerAttributesObj.FieldType + "' key='" + callerAttributesObj.FieldName + "' maxlength='" + callerAttributesObj.MaxChars + "'  class='" + callerAttributesObj.PlaceHolder;
                        if (callerAttributesObj.Mandatory == "Yes") {
                            editCallerDetailsData += " txtRequired "
                        }
                        editCallerDetailsData += " form-control field' placeholder='" + callerAttributesObj.FieldName + "' ></textarea>"
                    }


                    editCallerDetailsData += "</div>"
                });
            }
            // editCallerDetailsData += "</div>";
            // editCallerDetailsData += "</hr><table class='table no-border'> <tr><td class='txt-grey'>Alternate Number</td><td><input type='text' id='txtalternatenumber' placeholder='Alternate Number'  maxlength='35' class='form-control onlynumbers'/></td> <td><i class='icon-plus text-blue AddAlternatenumber pointer ' title='Add Alternate number'></i></td> </tr><tr id='Number_0'> </tr></table>"

            if (localStorage.getItem("TimeToDisplayWelcomeFrom") == "Before connecting to an agent") {
                editCallerDetailsData = "<div class='chat_form '>" + editCallerDetailsData;
                editCallerDetailsData += "<div class='error_msg mt-3'><label class='lblEditErrorMsg'></label></div><div class='center mt-3 mb-3'><button class='btnSubmit' id='Submit'>Submit</button></div></div>";
                //localStorage.setItem("editCallerDetailsData",editCallerDetailsData);
                $("#conversation").append(editCallerDetailsData);
                $('.CrmMultiselect').multiselect({
                    includeSelectAllOption: true,
                    buttonWidth: '100%'

                });
            } else if (localStorage.getItem("TimeToDisplayWelcomeFrom") == "After agent is connected") {
                editCallerDetailsData = "<div class='chat_form '>" + editCallerDetailsData;
                editCallerDetailsData += "<div class='error_msg mt-3'><label class='lblEditErrorMsg'></label></div><div class='center mt-3 mb-3'><button class='btnSubmit' id='Submit'>Submit</button></div></div>";
                // localStorage.setItem("editCallerDetailsData",editCallerDetailsData);
                $("#conversation").append(editCallerDetailsData);
                $('.CrmMultiselect').multiselect({
                    includeSelectAllOption: true,
                    buttonWidth: '100%'

                });
            }


        }

          function customerChatCloserTimer(conversationId) {
	 		           console.log(chatcloser);
            var imgUrl = url + "/StaticFiles/images/BotIcon.png";
            var chatCloserTimer = localStorage.getItem("AutoCloseTimeForChatInMin");
            chatCloserTimer = chatCloserTimer * 60;
           // chatCloserTimer = chatCloserTimer + 30;
		    if( localStorage.getItem("chattimer")>0)
				chatcloser=localStorage.getItem("chattimer");
				
            timerArr[conversationId] = setInterval(function () {
                if (chatcloser >= 0) {
			        console.log(chatcloser+"- ConId:"+conversationId);
                    chatcloser++;
					 localStorage.setItem("chattimer",chatcloser);
                }
                if (chatcloser == chatCloserTimer) {
				
			        UpdateTocloseChat(1,conversationId);
					 localStorage.removeItem('chattimer');
					nowtime = new Date();
				    receiveTime = nowtime.toLocaleTimeString().replace(/([\d]+:[\d]{2})(:[\d]{2})(.*)/, "$1$3");
				      var CustomerMsg2 = JSON.parse('{"recipient_id":"agent_' + conversationId + '","text":"' + localStorage.getItem("CustomerChatClosure") + '","timeStamp":"' + receiveTime + '"}');
                            chatConversation = "";
                            convMsg = "";
                            chatConversation = localStorage.getItem("ChatConversation");
							    if (chatConversation != "" && chatConversation != "undefined" && chatConversation != null && chatConversation != "[]") {
							    chatConversation = chatConversation.slice(0, -1);
							    convMsg = JSON.stringify(CustomerMsg2);
							    chatConversation = chatConversation +","+ convMsg;
							    chatConversation = chatConversation + ']';
							    localStorage.setItem("ChatConversation",chatConversation);
							    } else {
							    localStorage.setItem("ChatConversation",JSON.stringify(CustomerMsg2));
							    }
                        $("#conversation").append('<div class="speechItem"><div class="clearfix"><img src="' + imgUrl + '" alt="" class="left"><div class="speechLeft"><p>' + localStorage.getItem("CustomerChatClosure") + '</p></div></div><div class="time">' + receiveTime + '</div></div>');
                        $(".formBase").mCustomScrollbar("scrollTo", "bottom");
						
					   // toSendConversation_Of_aAgent_Customer(localStorage.getItem("CustomerChatClosure"), 4);
						var jsnMsg='[{"text":"' + localStorage.getItem("CustomerChatClosure") + '"}]';
					    toSendConversation_Of_aAgent_Customer(jsnMsg, 2);
						
					     var name="isAgentconnected_"+conversationId;
					       localStorage.setItem(name,0);
                       // $(".startOver").children().attr("ActualConversationId", localStorage.getItem("conversationId"));
					     $(".startOver").children().attr("ActualConversationId", conversationId);
					    localStorage.setItem("Startoverenabled", "true");
				       $(".startOver").show();
                        $(".typeArea").hide();
                    clearInterval(timerArr[conversationId]);
                        chatcloser = -1;
                         var fromId = localStorage.getItem("userId");
                         var agentId = localStorage.getItem("pingAgentId");
                         var IsPingAgent = localStorage.getItem("IsPingAgent");
                        var cust_jsonObj;
                        if (IsPingAgent == "true") {
                            cust_jsonObj = { "conversationId": conversationId, "from": conversationId, "to": agentId, "messageType": "0", "message": "EndChat from Customer","endchat":"true" };
                        } else {
                             cust_jsonObj = { "conversationId": conversationId, "from": fromId, "to": agentId, "messageType": "0", "message": "EndChat from Customer" ,"endchat":"true" };
                        }
                        customerSocket.emit('newMessage', cust_jsonObj, function (data) { console.log(data); });
					     toSendConversation_Of_aAgent_Customer("EndChat from Customer", 3);
                        if (customerSocket != undefined) {
                            customerSocket.disconnect();
						    //customerSocket=null;
                            isDisconnect = 1;
                            localStorage.setItem("isDisconnect", isDisconnect);
                        }
                        DisconnectAgentForThisChat();
                        return false;
                    }
                }, 2000);

        }

        function DisconnectAgentForThisChat() {
            $.ajax({
                type: "GET",
                url: "https://web.press3.io/TestAgentData.aspx",
                dataType: "JSON",
                data: {
                    type: 4, AccountId: AccountId, ConversationId: localStorage.getItem("conversationId"), AgentId: localStorage.getItem("AgentId")
                },
                success: function (res) {
                    console.log(res)


                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log(textStatus);
                }
            });
        }

        function UpdatePingUserId(userId) {
                var g=@x;
            var WidgetId =@data.WidgetId;
            var AccountId =@data.AccountId;
            //var url = "http://hubchat.com";
             var url ="https://hub-chat.telebu.com";
			  var agentName = localStorage.getItem("AgentName");
             conversationId = localStorage.getItem("conversationId");
           // var url2 = url + "/accounts/" + AccountId + "/widgets/" + WidgetId + "/conversations/" + conversationId + "/"+userId+"/UpdateUserId/";
			 var url2 = url + "/accounts/" + AccountId + "/widgets/" + WidgetId + "/conversations/" + conversationId + "/"+userId+"/"+agentName+"/UpdateUserId/";
         //  http://hubchat.com/accounts/1/widgets/1/Conversations/2/420/UpdateStatusOfMsg

            $.ajax({
                type: "POST",
                url: url2,
                dataType: "JSON",
                contentType: "application/json",
                async: false,
                data: "",
                success: function (res) {
                    console.log("Inserted successfully.");


                     },
                error: function (jqXHR, textStatus, errorThrown) {
                   // alert(textStatus);
				    console.log(textStatus);
                }
            });
        }
		
		function UpdateTocloseChat(isClosed) {
                var g=@x;
            var WidgetId =@data.WidgetId;
            var AccountId =@data.AccountId;
             var url ="https://hub-chat.telebu.com";
             conversationId = localStorage.getItem("conversationId");
             var url2 = url + "/accounts/" + AccountId + "/widgets/" + WidgetId + "/conversations/" + conversationId + "/" + isClosed +"/ClosedCustomerChat/";

            $.ajax({
                type: "POST",
                url: url2,
                dataType: "JSON",
                contentType: "application/json",
                async: false,
                data: "",
                success: function (res) {
                    console.log("Inserted successfully.");


                     },
                error: function (jqXHR, textStatus, errorThrown) {
                   // alert(textStatus);
					 console.log(textStatus);
                }
            });
        }
		 function getConversationEndchat(conversationId) {
            var g =@x;
            var WidgetId =@data.WidgetId;
            var AccountId =@data.AccountId;
            // var url = "http://hubchat.com";
           
			 var url = "https://hub-chat.telebu.com";
            var imgUrl = url + "/StaticFiles/images/Sender-sm.png";
			var conversationEndchat=0;
            var url2 = url + "/accounts/" + AccountId + "/widgets/" + WidgetId + "/conversations/" + conversationId + "/getConversationEndchat/";
			 $.ajax({
                type: "GET",
                url: url2,
                dataType: "JSON",
                contentType: "application/json",
                async: false,
                data: "",
                 success: function (res) {
                     if (res.length > 0) {
					 console.log(res);
					conversationEndchat= res[0].getConversationEndchat;
					global_ConversationEndchat=res[0].getConversationEndchat;
					global_BotFlowCompleted= res[0].BotFlowCompleted;
                     }
                 },
                error: function (jqXHR, textStatus, errorThrown) {
                   // alert(textStatus);
					 console.log(textStatus);
                }
            });
			return conversationEndchat;
        }
		function UpdateBotFlowEnd(botFlowEnd, conversationId) {
                 var g =@x;
            var WidgetId =@data.WidgetId;
            var AccountId =@data.AccountId;
             var url = "https://hub-chat.telebu.com";
           //  conversationId = localStorage.getItem("conversationId");
             var url2 = url + "/accounts/" + AccountId + "/widgets/" + WidgetId + "/conversations/" + conversationId + "/" + botFlowEnd +"/UpdateBotFlowEnd/";

            $.ajax({
                type: "POST",
                url: url2,
                dataType: "JSON",
                contentType: "application/json",
                async: false,
                data: "",
                success: function (res) {
                    console.log("Inserted successfully.");


                     },
                error: function (jqXHR, textStatus, errorThrown) {
                    //alert(textStatus);
					console.log(textStatus);
                }
            });

        }
	function InsertCustomerIpInfo(customerId) {
            
      
            var url = "https://hub-chat.telebu.com";
          
			   var WidgetId =@data.WidgetId;
			   var Data = JSON.stringify({
						   // "StatusId": "1"
							"ClientIp":globalIp,
							"HttpURL":document.referrer
						});

          //  var url2 = url +"/widgets/" + WidgetId + "/HttpURL/" + httpURL + "/clientIp/" + clientIp + "/" + customerId + "/";
			var url2 = url +"/widgets/" + WidgetId + "/HttpURL/" + customerId + "/InsertCustomerIpInformation";

			 $.ajax({
                type: "POST",
                url: url2,
                dataType: "JSON",
                contentType: "application/json",
                async: false,
                data: Data ,
                 success: function (res) {
                   
					 console.log(res);
				
                 },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log(textStatus);
                }
            });


        }
	
	function appendToConversation(filePath,extnsn){
				nowtime  = new Date();
			    sentTime = nowtime.toLocaleTimeString().replace(/([\d]+:[\d]{2})(:[\d]{2})(.*)/, "$1$3");
		
						 if( msgType == "1")
						 {
						  var text = "";
						
						var text = '<div class="speechItem right"><div class="speechRight">';
						text = text + ' <a target="_blank" href="'+filePath+'"><img src="' + filePath + '" class="thumb_attach mCS_img_loaded" width="100"></a></div> ';
						text = text + '<div class="time">' + sentTime + '</div></div>';
						}
						else if( msgType == "2")
						 {
							  var text = "";
							text = text + '<div class="speechItem right"><div class="speechRight">';
							//text = text + '<img src="Images/Sender-sm.png" alt="" class="left mCS_img_loaded"/>';
							  text = text + '<iframe class="thumb_attach" src="'+ filePath +'" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="" style="pointer-events:auto;"></iframe>';
							text = text + '<div class="time">' + sentTime + '</div>';
						 
						 }
						 else if( msgType == "6"){
						 var extClass;
							if(extnsn == "pdf" || extnsn == "docx")
								 extClass="far fa-file-pdf fa-2x";
							else if(extnsn == "xls" || extnsn == "xlsx" ||  extnsn == "csv" )
								 extClass="far fa-file-excel fa-2x";
								 
						 var text = '<div class="speechItem right"><div class="speechRight">';
						text = text + ' <div class="clearfix p-1 doc_attach"> <label class="pull-left mr-2 doc_icon"> <i class="'+extClass+'"></i> </label>  <label class="pull-left doc_name"> <a target="_blank" href="'+filePath+'">'+filePath+'</a></label> </div>';
						text = text + '<div class="time">' + sentTime + '</div></div>';
						
						 //pdf
						// var text = '<div class="speechItem right"><div class="speechRight">';
						//text = text + ' <div class="clearfix p-1 doc_attach"> <label class="pull-left mr-2 doc_icon"> <i class="far fa-file-pdf fa-2x"></i> </label>  <label class="pull-left doc_name"> <a href="#">'+filePath+'</a></label> </div>';
						//text = text + '<div class="time">' + sentTime + '</div></div>';
						
						//excel
                         // var text = '<div class="speechItem right"><div class="speechRight">';
						//text = text + ' <div class="clearfix p-1 doc_attach"> <label class="pull-left mr-2 doc_icon"> <i class="far fa-file-excel fa-2x"></i> </label>  <label class="pull-left doc_name"> <a href="#">'+filePath+'</a></label> </div>';
						//text = text + '<div class="time">' + sentTime + '</div></div>';
                    				
						 }
						 
						 try{
						 var t = JSON.parse(hitMsg);
                    chatConversation = "";
                    chatConversation = localStorage.getItem("ChatConversation");
                    if (chatConversation != "" && chatConversation != "undefined" && chatConversation != null && chatConversation != "[]") {
                        chatConversation = chatConversation.slice(0, -1);
                        convMsg = JSON.stringify(t);
                        convMsg = convMsg.substring(1, convMsg.length - 1);
                        chatConversation = chatConversation + "," + convMsg;
                        chatConversation = chatConversation + ']';
                        localStorage.setItem("ChatConversation", chatConversation);
							globalchat.ChatConversation =chatConversation;
							
                    } else {
                        localStorage.setItem("ChatConversation", JSON.stringify(t));
						globalchat.ChatConversation = JSON.stringify(t);
                    }
					localStorage.setItem(global_ChatName,JSON.stringify(globalchat));
					}
					 catch (e) { console.log(e); }
						
						 $("#conversation").append(text);
               
						$(".formBase").mCustomScrollbar("scrollTo", "bottom");
						extnsn="",filePath="",base64String="";
		}
	function getCountry() {
              
            var requestUrl =  "https://ipinfo.io/";
		
			$.get("https://ipinfo.io", function (response) {
		console.log("IP: " + response.ip +"country:" +response.country);
		 globalCountry=response.country; 
				   globalIp=response.ip  //json.query;
			
		}, "jsonp");



        }
		  function PostCountryToRasa() {
		    
			  var Data = JSON.stringify({
                   "event":"slot",
			 // "name":globalCountry,
			  "name":"location",
			  "value":"Bahrain" //globalCountry
                });
			
             conversationId = localStorage.getItem("conversationId");
             var url2 =  "http://192.168.74.51:5066/conversations/"+conversationId+"/tracker/events?include_events=NONE"

            $.ajax({
                type: "POST",
                url: url2,
                dataType: "JSON",
                contentType: "application/json",
                async: false,
                data: Data,
                success: function (res) {
                    console.log(res);


                     },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log(textStatus);
                }
            });

        }
		$(document).delegate("#Submit1", "click", function () {
			$(".lblEditErrorMsg1").html("");
			var frmVal =$("#frmfield").val();
			if(frmVal == ""){
				$(".lblEditErrorMsg1").html("Please enter mobile or email");
				return false;
			}
			if (isNaN(frmVal)){
			
			if (!isValidEmail(frmVal)) {
					//flag = 1;
					$(".lblEditErrorMsg1").html("Please Enter Valid Email");
					return false;
				} else {
				  //  detailsObj[Key] = value;
				  console.log(frmVal);
				  endchat="";
				  global_Frmfld=frmVal; //"Email";
				  $("#send").click();
				 $("#frmfield").attr("disabled","disabled");
				  $("#Submit1").attr("disabled","disabled");
				   $("#Submit1").css("cursor","not-allowed");
					global_Frmfld="";
				}
				
			}
			else  {
				var moblen = frmVal.length;
				if (moblen > 15 || moblen < 7) {
					$(".lblEditErrorMsg1").html("Mobile Number length should be Min 7 and Max 15");
					//flag = 1;
					return false;
				} 
				else{
					 console.log(frmVal);
					 endchat="";
					 global_Frmfld=frmVal ;//"Mobile";
					  $("#frmfield").attr("disabled","disabled");
					    $("#Submit1").attr("disabled","disabled");
						 $("#Submit1").css("cursor","not-allowed");
					$("#send").click();
					global_Frmfld="";
				}
				
			}

		
		});

    </script>

</body>
</html>